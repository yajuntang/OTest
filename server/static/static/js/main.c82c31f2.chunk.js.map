{"version":3,"sources":["application/style.less","components/operator/index.less","components/form-element/index.less","components/table-editable/index.less","serviceWorker.js","application/index.js","library/tree-utils.js","components/FromModal/index.js","components/RightClickMenu/index.js","components/operator/index.jsx","components/form-element/index.jsx","components/table-editable/index.jsx","components/config-page/ConfigPageField.jsx","pages/base/BasePages.js","library/strings.js","library/handle-error.js","library/request.js","library/handle-success.js","pages/test-pages/index.js","pages/test-plans/index.js","application/global.js","components/config-appId/ConfigAppField.jsx","pages/test-exec/index.js","pages/guide/guideData.js","pages/guide/index.js","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Header","Sider","Content","menus","icon","title","path","Application","state","collapsed","toggle","setState","defaultSelectedKeys","pathname","this","props","pop","push","trigger","collapsible","style","display","height","justifyContent","alignItem","background","margin","color","fontSize","theme","mode","map","item","Item","key","onClick","history","replace","type","id","padding","lineHeight","cursor","transition","children","Component","flatListById","data","flat_data","i","length","node","plan_id","flatListByKey","undefined","Option","FromModal","confirmLoading","handlerOk","form","onOk","validateFields","err","values","isRest","resetFields","visible","onCancel","okText","fields","maskClosable","getFieldDecorator","layout","filter","disabled","label","field","width","decorator","selectData","onChange","value","setFieldsValue","index","name","React","create","menu","menuView","overlay","Operator","loadingIcon","getLabel","options","loading","labelWidth","offsetWidth","className","textAlign","labelStyle","placement","ref","v","getConfirm","confirm","withKey","e","altKey","metaKey","ctrlKey","stopPropagation","preventDefault","onConfirm","getText","getStatusSwitch","opt","statusSwitch","status","defaultLabel","Reflect","deleteProperty","getItem","items","moreText","moreContentWidth","moreTrigger","operators","more","forEach","isMore","operatorsLength","marginLeft","defaultProps","TextArea","Password","FormItem","FormElement","container","querySelector","flexBasis","colon","extra","hasFeedback","help","labelCol","required","validateStatus","wrapperCol","others","elementStyle","component","includes","isInputLikeElement","treeData","Group","RangePicker","MonthPicker","Error","getElement","FieldsTable","renderColumns","text","record","column","dataIndex","editable","showEdit","indexOf","rowKey","__form_fields","Set","add","__validate","callback","Array","from","validateFieldsAndScroll","realValues","Object","keys","realKey","split","save","newRecord","dataSource","findIndex","splice","cancel","columns","isNoting","r","find","newDataSource","initialValue","handleAddNewRow","uuid","__add","formRef","tabRef","ft","showAdd","addText","emptyText","footer","tableDataSource","render","classNames","classnames","bordered","pagination","locale","ConfigPageField","pageName","pageInfo","fieldsColumns","placeholder","rules","message","validator","rule","reg","RegExp","test","onPressEnter","target","parentNode","getElementsByTagName","focus","onKeyUp","console","log","_that","disable","process","onSave","deleteItem","del","delItems","onDel","validate","promises","fieldsTableForm","Promise","resolve","reject","all","then","renderTableTitle","fontWeight","justify","marginBottom","marginRight","ClearTable","handleAdd","tab","handleChange","nextProps","comparePageInfo","a","b","size","BasePages","Strings","handleError","error","errorTip","description","response","noAccess","notFound","serverBusy","startsWith","timeOut","getErrorTip","notification","success","request","onShowSuccessTip","onShowErrorTip","isMock","instance","axios","mockInstance","setDefaultOption","defaults","timeout","headers","post","put","baseURL","url","d","method","successTip","noEmpty","isArray","noEmptyData","CancelToken","isGet","defaultsContentType","contentType","stringify","params","ajaxPromise","cancelToken","c","code","desc","localTips","canceled","catch","handleSuccess","interceptors","use","cfg","Tree","Input","TreeNode","Search","TestPages","dataList","expandedKeys","searchValue","autoExpandParent","menuItemIndex","pages","nodeKey","showAddVersionModal","showCopyVersionModal","version_modal_field","copy_version_modal_field","onExpand","getParentKey","tree","parentKey","some","self","onSelected","getNodeByKey","onDelVersion","version_id","res","get_pages","finally","source","node_key","old_path","get","Math","min","switchMenItem","generateList","optionMenus","flexDirection","flex","span","borderRight","borderColor","paddingTop","alignItems","zIndex","content","position","top","right","overflowY","image","PRESENTED_IMAGE_SIMPLE","marginTop","onSelect","loop","beforeStr","substr","afterStr","onDelPageData","onSavePageData","onAddVersion","onCopyVersion","TestPlans","flat_menu_data","flat_pages_data","checkedKeys","selectedKeys","menuSelectedKeys","menuItemId","showAddPlanModal","showAddSubPlanModal","showCopyPlanModal","versions","allCheckStatus","plan_modal_field","sub_plan_modal_field","copy_plan_modal_field","onCheck","updateCheckedKeys","info","onAllSelected","checked","getVersionByMenuItem","renderTreeNodes","dataRef","onDelPlan","getMenuItem","get_plans","menuItem","nodes","selected_page_node","onCheckAllStatus","version","is_del","open","parent_id","isRoot","parent_info","old_info","page","getKeyInArray","array","node_info","showAddPlan","showAddSubPlan","showCopyPlan","checkable","onAddPlan","onCopyPlan","Android","ip","port","device_id","IOS","DynamicFieldSet","remove","k","getFieldValue","nextDataSource","concat","newSource","formItemLayout","xs","sm","formItemLayoutWithOutLabel","offset","formItems","validateTrigger","whitespace","ConfigAppField","TabPane","Text","Step","InputGroup","task_status","waited","running","aborted","pending_stop","successful","user_stopped","task_status_color","TestExec","logger","plans","pageTasks","platform","appId","tasks","task","task_logs","showAppIdDialog","appIds","scrollToBottom","messagesEnd","scrollIntoView","behavior","onSaveAppIds","appIdFormRef","temp","plan","task_id","selected","onClickHistory","onPagination","global","get_task","getAppIds","report_url","page_data","has_attach","task_step_errors","step_key","step_error_key","task_step","task_log","attach","page_name","app_info","itemLayout","renderItem","status_color","align","paddingLeft","paddingRight","paddingBottom","device","time","simple","total","pageSize","defaultCurrent","showQuickJumper","pageNum","compact","defaultValue","placeHolder","addonBefore","dropdownRender","onMouseDown","minWidth","dropdownStyle","maxHeight","overflow","treeDefaultExpandAll","stopTest","borderRadius","startTest","el","ghost","getBackControl","onRedo","onRedoError","goToReport","defaultActiveKey","pageColor","pageTitleColor","method_item","method_data","methodColor","alias","direction","subTitle","sub_title","slice","isManual","test_log","test_step","clearInterval","setInterval","getTaskLog","setTimeout","getTaskStep","app_id","group_id","JSON","parse","currentTask","task_steps","step","selected_node","href","guideData","imgs","support_framework","poco","airtest","support_platform","android","Title","Typography","Paragraph","Link","flatData","list","Guide","getContainer","document","getElementById","Doc","paramsColumns","support_ios","support_android","ios","support_airtest","support_poco","level","defaultChecked","src","alt","App","exact","to","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c82c31f2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/style.1d86487c.less\";","module.exports = __webpack_public_path__ + \"static/media/index.9a95c43c.less\";","module.exports = __webpack_public_path__ + \"static/media/index.c431906e.less\";","module.exports = __webpack_public_path__ + \"static/media/index.36f93a38.less\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {Component} from \"react\";\nimport React from \"react\";\nimport {Layout, Menu, Icon} from 'antd';\nimport './style.less';\n\nconst {Header, Sider, Content} = Layout;\n\nconst menus = [{\n    icon: 'user',\n    title: \"版本计划\",\n    path: \"/test_pages\"\n}, {\n    icon: 'user',\n    title: \"测试计划\",\n    path: \"/test_plans\"\n}, {\n    icon: 'user',\n    title: \"执行计划\",\n    path: \"/test_exec\"\n}, {\n    icon: 'user',\n    title: \"新手教程\",\n    path: \"/guide\"\n}];\n\nexport class Application extends Component {\n    state = {\n        collapsed: false,\n    };\n\n    toggle = () => {\n        this.setState({\n            collapsed: !this.state.collapsed,\n        });\n    };\n\n    defaultSelectedKeys = [];\n\n    render() {\n        let {pathname} = this.props.location;\n        if (pathname === '/') pathname = \"/test_pages\";\n\n        this.defaultSelectedKeys.pop();\n        this.defaultSelectedKeys.push(pathname);\n\n        return (\n            <Layout>\n                <Sider trigger={null} collapsible collapsed={this.state.collapsed}>\n                    <div style={{\n                        display: 'flex',\n                        height: 32,\n                        justifyContent: \"center\",\n                        alignItem: 'center',\n                        background: ' rgba(255, 255, 255, 0.2)',\n                        margin: 16\n                    }}>\n                        {/*<p style={{color: \"#fff\", fontSize: 20}}>{pathname}</p>*/}\n                        <p style={{color: \"#fff\", fontSize: 20}}>{this.state.collapsed ? 'YA' : 'YA-TEST'}</p>\n                    </div>\n                    <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={this.defaultSelectedKeys}>\n                        {\n                            menus && menus.map((item) => {\n                                return <Menu.Item key={item.path} onClick={() => this.props.history.replace(item.path)}>\n                                    <Icon type={item.icon}/>\n                                    <span>{item.title}</span>\n                                </Menu.Item>\n                            })\n                        }\n                    </Menu>\n                </Sider>\n                <Layout id='rootLayout'>\n                    <Header style={{background: '#fff', padding: 0}}>\n                        <Icon\n                            style={{\n                                fontSize: '18px',\n                                lineHeight: '64px',\n                                padding: '0 24px',\n                                cursor: 'pointer',\n                                transition: ' color 0.3s',\n                            }}\n                            type={this.state.collapsed ? 'menu-unfold' : 'menu-fold'}\n                            onClick={this.toggle}\n                        />\n                    </Header>\n                    <Content>\n                        {this.props.children}\n                    </Content>\n                </Layout>\n            </Layout>\n        );\n    }\n\n}\n","/**\n * 树操作通用方法，将一些常用方法提炼出来，方便使用。\n * @module 树操作工具\n */\n\nimport {cloneDeep} from 'lodash/lang';\nimport {uniqueArray, arrayRemoveAll, arrayRemove} from './index';\n\n/**\n * 将数据转换成tree所需格式\n * @param {object} data 要进行转换的object\n * @param {String} [keyField='id'] 指定data中某个字段转换为树所需的key\n * @param {String} [titleField='name'] 指定data中某个字段转换为树所需的name\n * @returns {{name: *, key: *}}\n */\nexport function generateTreeNode(data, keyField = 'id', titleField = 'name') {\n    return {...data, title: data[titleField], key: data[keyField]};\n}\n\n/**\n * 将数据转换成tree所需格式\n * @param {Array} data 要进行转换的一些数据\n * @param {String} [keyField='id'] 指定data中某个字段转换为树所需的key\n * @param {String} [titleField='name'] 指定data中某个字段转换为树所需的name\n * @returns {Array}\n */\nexport function generateTreeNodes(data, keyField = 'id', titleField = 'name') {\n    let arr = [];\n    if (data && data.length) {\n        arr = data.map(d => generateTreeNode(d, keyField, titleField));\n    }\n    return arr;\n}\n\n/**\n * 根据key 将node设置成叶子节点\n * @param {Array} treeData 树的树状结构数据\n * @param {String} key 节点的key值\n */\nexport function setLeaf(treeData, key) {\n    const loopLeaf = (data) => {\n        for (let item of data) {\n            if (item.key === key) {\n                item.isLeaf = true;\n                break;\n            }\n            if (item.children && item.children.length) {\n                loopLeaf(item.children);\n            }\n        }\n    };\n    loopLeaf(treeData);\n}\n\n/**\n * 给指定key的节点添加子节点\n * @param {Array} treeData 树的树状结构数据\n * @param {String} key 节点的key值\n * @param {Array} child 要添加的子节点\n */\nexport function appendChildrenByKey(treeData, key, child) {\n    const loop = (data) => {\n        for (let item of data) {\n            if (key === item.key) {\n                if (item.children) {\n                    item.children = item.children.concat(child);\n                } else {\n                    item.children = child;\n                }\n\n                if (!item.children || !item.children.length) {\n                    setLeaf(treeData, key);\n                }\n                break;\n            }\n            if (item.children && item.children.length) {\n                loop(item.children);\n            }\n        }\n    };\n    loop(treeData);\n}\n\n/**\n * 检测某个节点是否有parent节点\n * @param {Array} rows 所有节点，扁平数据，非树状结构\n * @param {object} row 需要判断得节点\n * @returns {boolean}\n */\nexport function hasParent(rows, row) {\n    let parentKey = row.parentKey;\n    return rows.find(r => r.key === parentKey);\n}\n\n/**\n * 根据key，查询其所有后代节点，一般会用于删除\n * @param {Array} rows 具有key，parentKey关系的扁平数据结构\n * @param {object} key 要查询的节点 key\n * @returns {Array}\n */\nexport function getGenerationsByKey(rows, key) {\n    // 这个函数会被多次调用，对rows做深拷贝，否则会产生副作用。\n    rows = cloneDeep(rows);\n    const parentNode = rows.find(item => item.key === key);\n    if (!parentNode) return [];\n\n\n    let nodes = [parentNode];\n    let generationNodes = [cloneDeep(parentNode)];\n\n    // 存放要处理的节点\n    let toDo = nodes.map((v) => v);\n\n    while (toDo.length) {\n        // 处理一个，头部弹出一个。\n        let node = toDo.shift();\n        // 获取子节点。\n        rows.forEach(row => {\n            if (row.parentKey === node.key) {\n                let child = cloneDeep(row);\n                generationNodes.push(child);\n                // child加入toDo，继续处理\n                toDo.push(child);\n            }\n        });\n    }\n    return generationNodes;\n}\n\n\n/**\n * js构造树方法。会给节点添加parentKeys,parentNodes,parentTexts属性，方便后期数据提取\n * @param {Array} rows 具有key，parentKey关系的扁平数据结构，标题字段为text\n * @param {object} [parentNode=null] 开始节点\n * @returns {Array}\n */\nexport function convertToTree(rows, parentNode = null) {\n    // 这个函数会被多次调用，对rows做深拷贝，否则会产生副作用。\n    rows = cloneDeep(rows);\n    parentNode = cloneDeep(parentNode);\n\n    let nodes = [];\n    if (parentNode) {\n        nodes.push(parentNode);\n    } else { // 获取所有的顶级节点\n        nodes = rows.filter(r => !hasParent(rows, r));\n    }\n\n    // 存放要处理的节点\n    let toDo = nodes.map((v) => v);\n\n    while (toDo.length) {\n        // 处理一个，头部弹出一个。\n        let node = toDo.shift();\n        // 获取子节点。\n        rows.forEach(row => {\n            if (row.parentKey === node.key) {\n                let child = cloneDeep(row);\n                let parentKeys = [node.key];\n                if (node.parentKeys) {\n                    parentKeys = node.parentKeys.concat(node.key);\n                }\n                child.parentKeys = parentKeys;\n\n                let parentTexts = [node.text];\n                if (node.parentTexts) {\n                    parentTexts = node.parentTexts.concat(node.text);\n                }\n                child.parentTexts = parentTexts;\n\n                const tempNode = cloneDeep(node);\n                delete tempNode.children;\n                delete tempNode.parentKeys;\n                delete tempNode.parentNodes;\n                delete tempNode.parentTexts;\n                let parentNodes = [tempNode];\n                if (node.parentNodes) {\n                    parentNodes = node.parentNodes.concat(parentNodes);\n                }\n                child.parentNodes = parentNodes;\n\n                if (node.children) {\n                    node.children.push(child);\n                } else {\n                    node.children = [child];\n                }\n                // child加入toDo，继续处理\n                toDo.push(child);\n            }\n        });\n    }\n\n    if (parentNode) {\n        return nodes[0].children;\n    }\n    return nodes;\n}\n\n/**\n * 根据指定数据的键值对，查找node，比如根据path查找： getNodeByPropertyAndValue(treeData, 'path', '/user/list')\n * @param {Array} treeData 树状结构数据\n * @param {String} key key值，比如'path'，'text'等节点数据属性\n * @param {*} value 节点属性所对应的数据\n * @param {Function} [compare] 节点属性所对应的数据比较方式， 默认 === 比对\n * @returns {object} 返回根据 key value查找到的节点\n */\nexport function getNodeByPropertyAndValue(treeData, key, value, compare) {\n    if (!treeData || !treeData.length) return null;\n    if (!compare) compare = (a, b, item) => a === b;\n    let node = null;\n    const loop = (data) => {\n        for (let item of data) {\n            if (compare(item[key], value, item)) {\n                node = {...item};\n                break;\n            }\n            if (item.children && item.children.length) {\n                loop(item.children);\n            }\n        }\n    };\n    loop(treeData);\n    return node;\n}\n\n/**\n * 根据key查找节点\n * @param {Array} treeData 树状结构数据\n * @param {String} key\n * @returns {object} 根据key查找到的节点\n */\nexport function getNodeByKey(treeData, key) {\n    return getNodeByPropertyAndValue(treeData, 'key', key);\n}\n\n/**\n * 根据key查找后代元素的key\n * @param {Array} treeData 树状结构数据\n * @param {String} key\n * @returns {*[]} 根据key查找到的所有后代节点key\n */\nexport function getGenerationKeys(treeData, key) {\n    const node = getNodeByKey(treeData, key);\n    const keys = [];\n    const loop = (node) => {\n        const {key, children} = node;\n        if (children && children.length) {\n            children.forEach(loop);\n        } else {\n            keys.push(key);\n        }\n    };\n    loop(node);\n\n    return keys.filter(item => item !== key);\n}\n\n/**\n * 根据key查找所有后代元素\n * @param {Array} treeData 树状结构数据\n * @param {String} key\n * @returns {Array} 根据key查找到的所有后代节点\n */\nexport function getGenerationalNodesByKey(treeData, key) {\n    const node = getNodeByKey(treeData, key);\n    if (!node.children || !node.children.length) {\n        return [];\n    }\n    const allNodes = [];\n    const loop = (data) => {\n        data.forEach(d => {\n            allNodes.push(d);\n            if (d.children && d.children) {\n                loop(d.children);\n            }\n        });\n    };\n    loop(node.children);\n    return allNodes;\n}\n\n/**\n * 获取选中节点的keys，点击父节点时，其下所有后代元素将被全被选中，或者全不选中，选中子节点时，其所有祖先节点将被选中\n * @param treeData 树状结构数据\n * @param {Array} checkedKeys 点击过之后，树选中的keys\n * @param {boolean} checked 当前点击时 checked （true）还是 unchecked（false）\n * @param {String} checkNodeKey 当前点击节点的key\n * @returns {Array} 选中的keys\n */\nexport function getCheckedKeys(treeData, checkedKeys, checked, checkNodeKey) {\n    // TODO 区分半选和全选\n    let allKeys = [...checkedKeys];\n    const generationalNodes = getGenerationalNodesByKey(treeData, checkNodeKey);\n    const generationalKeys = generationalNodes.map(n => n.key);\n\n    if (checked) {\n        // 选中所有后代节点\n        allKeys = allKeys.concat(generationalKeys);\n\n        // 选中有祖先节点\n        const node = getNodeByKey(treeData, checkNodeKey);\n        if (node.parentKeys) {\n            allKeys = allKeys.concat(node.parentKeys);\n        }\n    } else {\n        // 取消选中所有后代节点\n        allKeys = arrayRemoveAll(allKeys, generationalKeys.concat(checkNodeKey));\n\n        // 判断其父节点是否还有子节点选中了，如果没有，父节点也不选中\n        const node = getNodeByKey(treeData, checkNodeKey);\n        if (node.parentKeys) {\n            const pks = [...node.parentKeys];\n            pks.reverse();\n            pks.forEach(key => {\n                const pNode = getNodeByKey(treeData, key);\n                if (pNode.children && pNode.children.length) {\n                    let hasCheckedChild = false;\n                    for (let pCNode of pNode.children) {\n                        if (allKeys.indexOf(pCNode.key) > -1) {\n                            hasCheckedChild = true;\n                            break;\n                        }\n                    }\n                    if (!hasCheckedChild) {\n                        allKeys = arrayRemove(allKeys, key);\n                    }\n                }\n            });\n        }\n    }\n    return uniqueArray(allKeys);\n}\n\n/**\n * 根据key删除节点\n * @param {Array} treeData 树的树状结构数据\n * @param {String} key 要删除节点的key值\n */\nexport function removeNodeByKey(treeData, key) {\n    if (!treeData || !treeData.length) return null;\n    const loop = (data) => {\n        for (let i = 0; i < data.length; i++) {\n            const item = data[i];\n            if (item.key === key) {\n                data.splice(i, 1);\n                break;\n            } else if (item.children && item.children.length) {\n                loop(item.children);\n            }\n        }\n    };\n    loop(treeData);\n}\n\n/**\n * 给指定key的node节点增加一个新的子节点\n * @param {Array} treeData 树的树状结构数据\n * @param {String} key 要操作的节点的key值\n * @param {object} newNode 需要加入的子节点\n */\nexport function addNodeChildByKey(treeData, key, newNode) {\n    if (!treeData || !treeData.length) return null;\n    newNode.isLeaf = true;\n    const loop = (data) => {\n        for (let item of data) {\n            if (item.key === key) {\n                if (item.children) {\n                    item.children.push({...newNode});\n                } else {\n                    item.children = [{...newNode}];\n                }\n                break;\n            }\n            if (item.children && item.children.length) {\n                loop(item.children);\n            }\n        }\n    };\n    loop(treeData);\n}\n\n/**\n * 更新某个节点\n * @param {Array} treeData 树的树状结构数据\n * @param {object} newNode 需要跟新的节点新数据，会根据key对原数据进行比对\n */\nexport function updateNode(treeData, newNode) {\n    if (!treeData || !treeData.length) return null;\n    const loop = (data) => {\n        for (let item of data) {\n            if (item.key === newNode.key) {\n                Object.keys(item).forEach(key => {\n                    item[key] = newNode[key];\n                });\n                break;\n            }\n            if (item.children && item.children.length) {\n                loop(item.children);\n            }\n        }\n    };\n    loop(treeData);\n}\n\n/**\n * 根据某个节点，获取其最顶级节点\n * @param {Array} treeData 树状结构数据\n * @param {object} node 节点数据\n * @returns {object} 最顶层节点\n */\nexport function getTopNodeByNode(treeData, node) {\n    if (!treeData || !treeData.length || !node) return null;\n\n    if (node && !node.parentKey) return node;\n    let parentNode = null;\n    const loop = (data) => { // 查找node的父节点\n        for (let item of data) {\n            if (item.key === node.parentKey) {\n                parentNode = {...item};\n                break;\n            }\n            if (item.children && item.children.length) {\n                loop(item.children);\n            }\n        }\n    };\n    loop(treeData);\n    return getTopNodeByNode(treeData, parentNode); // 继续查找parentNode的父节点\n}\n\n/**\n * 渲染树，cb(node[, children nodes])\n * @param {Array} treeData 树的树状结构数据\n * @param {function} cb 回调函数：cb(node[, children nodes])\n */\nexport function renderNode(treeData, cb) {\n    const loop = data => data.map((item) => {\n        if (item.children) {\n            return cb(item, loop(item.children)); // item children Item\n        }\n\n        return cb(item); // 叶子节点\n    });\n    return loop(treeData);\n}\n\n/**\n * 查找给定节点，及其后代节点property属性，第一个不为空的值\n * @param {Array} treeData 树的树状结构数据\n * @param {object} node 节点数据\n * @param {String} property 属性，比如 key， path等\n * @returns {*}\n */\nexport function getFirstValue(treeData, node, property) {\n    if (node[property]) return node[property];\n    let firstValue = null;\n    const loop = data => {\n        for (let item of data) {\n            if (item[property]) {\n                firstValue = item[property];\n                break;\n            }\n            if (item.children && item.children.length) {\n                loop(item.children);\n            }\n        }\n    };\n    if (node.children && node.children.length) {\n        loop(node.children);\n    }\n    return firstValue;\n}\n\n\nexport function generateList(data, dataList) {\n    if (!data) return;\n    for (let i = 0; i < data.length; i++) {\n        const node = data[i];\n        const {key} = node;\n        dataList.push({key, title: key, data: node});\n        if (node.children) {\n            generateList(node.children, dataList);\n        }\n    }\n}\n\nexport function flatListById(data, flat_data) {\n    if(!data) return;\n    for (let i = 0; i < data.length; i++) {\n        const node = data[i];\n        const {plan_id} = node;\n        flat_data[plan_id] = node;\n        if (node.children) {\n            flatListById(node.children, flat_data);\n        }\n    }\n}\n\nexport function flatListByKey(data, flat_data) {\n    if(!data) return;\n    for (let i = 0; i < data.length; i++) {\n        const node = data[i];\n        const {key} = node;\n        flat_data[key] = node;\n        if (node.children) {\n            flatListByKey(node.children, flat_data);\n        }\n    }\n\n    delete flat_data.undefined\n\n}\n\nexport function getParentKey(key, tree) {\n    let parentKey;\n    for (let i = 0; i < tree.length; i++) {\n        const node = tree[i];\n        if (node.children) {\n            if (node.children.some(item => item.key === key)) {\n                parentKey = node.key;\n            } else if (getParentKey(key, node.children)) {\n                parentKey = getParentKey(key, node.children);\n            }\n        }\n    }\n    return parentKey;\n}\n\n","import {Modal, Form, Input, Select} from 'antd';\nimport * as React from \"react\";\n\nconst {Option} = Select;\n\nclass FromModal extends React.Component {\n\n    state = {\n        confirmLoading: false\n    };\n\n    handlerOk = () => {\n        const {form, onOk} = this.props;\n        form.validateFields((err, values) => {\n            if (err) {\n                return;\n            }\n            if (onOk) {\n                this.setState({confirmLoading: true});\n                onOk(values, (isRest) => {\n                    if (isRest) form.resetFields();\n                    this.setState({confirmLoading: false})\n                })\n            }\n        });\n    };\n\n    render() {\n        const {visible, onCancel, form, title, okText, fields, maskClosable = false} = this.props;\n        const {getFieldDecorator} = form;\n        return (\n            <Modal\n                visible={visible}\n                title={title}\n                okText={okText}\n                maskClosable={maskClosable}\n                onCancel={onCancel}\n                confirmLoading={this.state.confirmLoading}\n                onOk={this.handlerOk}\n            >\n                <Form layout=\"vertical\">\n                    {\n                        fields.filter(item => !item.disabled).map((item) => (\n                            <Form.Item label={item.label} key={item.field}\n                                       style={{width: item.width ? item.width : \"100%\"}}\n\n                            >\n                                {\n                                    getFieldDecorator(item.field, {...item.props ? item.props.decorator : {}})(\n                                        item.selectData ? <Select\n                                            onChange={(value) => {\n                                                this.props.form.setFieldsValue({[item.field]: value})\n                                            }}\n                                        >\n                                            {item.selectData.map((item, index) => (\n                                                <Option value={item.value} key={index}>{item.name}</Option>))}\n                                        </Select> : <Input {...item.props}  />)\n                                }\n                            </Form.Item>\n                        ))\n                    }\n                </Form>\n            </Modal>\n        );\n    }\n}\n\nexport default Form.create()(FromModal)\n","import { Menu, Dropdown} from 'antd';\nimport * as React from \"react\";\n\nexport default class extends React.Component {\n\n    menu = (\n        <Menu onClick={this.props.onClick}>\n            <Menu.Item key=\"add\">添加</Menu.Item>\n            <Menu.Item key=\"copy\">复制</Menu.Item>\n            <Menu.Item key=\"del\">删除</Menu.Item>\n        </Menu>\n    );\n\n    render() {\n        const {menu, children, onClick} = this.props;\n        const menuView = (\n            <Menu>\n                {menu.map(item =>\n                    <Menu.Item onClick={onClick} key={item.key}>{item.name}</Menu.Item>\n                )}\n            </Menu>\n        );\n        // {/*trigger={['contextMenu']}*/}\n        return (\n            <Dropdown {...this.props} overlay={menuView}>\n                {children}\n            </Dropdown>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {Icon, Popconfirm, Dropdown, Menu, Tooltip} from 'antd';\nimport './index.less';\n\n/**\n * 操作封装，一般用于表格最后的操作列中\n */\nexport default class Operator extends Component {\n    static propTypes = {\n        items: PropTypes.arrayOf(PropTypes.shape({\n            label: PropTypes.isRequired,\n            icon: PropTypes.string,\n            visible: PropTypes.bool,\n            disabled: PropTypes.bool,\n            color: PropTypes.string,\n            loading: PropTypes.bool,\n            isMore: PropTypes.bool,\n\n            onClick: PropTypes.func,\n            confirm: PropTypes.object,\n            statusSwitch: PropTypes.object,\n        })),\n        moreText: PropTypes.any,\n        moreContentWidth: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.number,\n        ]),\n        moreTrigger: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.array,\n        ]),\n    };\n\n    static defaultProps = {\n        items: [],\n        moreText: <span>更多<Icon type=\"down\"/></span>,\n        moreContentWidth: 'auto',\n        moreTrigger: 'click',\n    };\n\n    loadingIcon = <Icon type=\"loading\"/>;\n\n    label = {};\n\n    getLabel = (options, i) => {\n        let {label, icon, loading, color, disabled} = options;\n\n        if (loading) {\n            const labelWidth = this.label[i] ? this.label[i].offsetWidth : 'auto';\n            return <a className=\"operator-label\" style={{display: 'inline-block', width: labelWidth, textAlign: 'center'}}>{this.loadingIcon}</a>;\n        }\n\n        const labelStyle = {};\n\n        if (color) labelStyle.color = color;\n\n        if (icon) {\n            label = <Tooltip placement=\"bottom\" title={label}><Icon style={{fontSize: 16}} type={icon}/></Tooltip>;\n        }\n\n        return <a className={`operator-label ${disabled ? 'operator-label-disabled' : ''}`} style={labelStyle} ref={v => this.label[i] = v}>{label}</a>;\n    };\n\n    /*\n     * 如果含有confirm属性，即表明是Popconfirm，\n     * confirm作为Popconfirm的props\n     *\n     * 其他元素同理\n     * */\n    getConfirm = (options, i) => {\n        let label = this.getLabel(options, i);\n        const {confirm, withKey = true} = options;\n\n        // 配合 alt command ctrl 键使用，不弹出提示\n        if (withKey) {\n            label = (\n                <span onClick={(e) => {\n                    if (e.altKey || e.metaKey || e.ctrlKey) {\n                        e.stopPropagation();\n                        e.preventDefault();\n\n                        if (confirm && confirm.onConfirm) {\n                            confirm.onConfirm(e);\n                        }\n                    }\n                }}>\n                    {label}\n                </span>\n            );\n        }\n        return (\n            <Popconfirm {...confirm}>\n                {label}\n            </Popconfirm>\n        );\n    };\n\n    getText = (options, i) => {\n        let label = this.getLabel(options, i);\n        const {onClick} = options;\n\n        if (options.label.type === 'a') return <span onClick={onClick}>{label}</span>;\n\n        return <span onClick={onClick}>{label}</span>;\n    };\n\n    getStatusSwitch = (opt, i) => {\n        const {statusSwitch, disabled = false} = opt;\n        const {status} = statusSwitch;\n        const props = {...statusSwitch};\n        const icon = status ? 'check-circle' : 'minus-circle-o';\n        const color = status ? 'green' : 'red';\n\n        const defaultLabel = <Icon type={icon}/>;\n        let label = this.getLabel({...opt, label: defaultLabel, color}, i);\n\n        // 如果没有权限，不允许进行操作，只做展示\n        if (disabled) return label;\n\n        Reflect.deleteProperty(props, 'status');\n        return (\n            <Popconfirm {...props}>\n                {label}\n            </Popconfirm>\n        );\n    };\n\n    getItem = (opt, i) => {\n        const {\n            confirm,\n            statusSwitch,\n            visible = true,\n            disabled = false,\n        } = opt;\n\n        if (visible) {\n            // 因为label特殊，getStatusSwitch 内部自己判断了是否可用\n            if (disabled && statusSwitch) return this.getStatusSwitch(opt, i);\n\n            if (disabled) {\n                opt.color = '#ccc';\n                return this.getLabel(opt, i);\n            }\n\n            if (confirm) return this.getConfirm(opt, i);\n\n            if (statusSwitch) return this.getStatusSwitch(opt, i);\n\n            return this.getText(opt, i);\n        }\n        return null;\n    };\n\n    render() {\n        let {items, moreText, moreContentWidth, moreTrigger} = this.props;\n        let operators = [];\n        let more = [];\n\n        if (typeof moreTrigger === 'string') {\n            moreTrigger = [moreTrigger];\n        }\n\n        items.forEach((opt, i) => {\n            const {isMore} = opt;\n            const item = this.getItem(opt, i);\n\n            if (item) {\n                if (isMore) {\n                    more.push(item);\n                } else {\n                    operators.push(item);\n                }\n            }\n        });\n\n        if (more && more.length) { // 更多\n            const menu = (\n                <Menu style={{width: moreContentWidth}}>\n                    {\n                        more.map((item, index) => <Menu.Item key={item.label || index}>{item}</Menu.Item>)\n                    }\n                </Menu>\n            );\n            operators.push(\n                <Dropdown overlay={menu} trigger={moreTrigger}>\n                    <a className=\"operator-label\">\n                        {moreText}\n                    </a>\n                </Dropdown>\n            );\n        }\n\n        const operatorsLength = operators.length;\n\n        if (!operatorsLength) {\n            return null;\n        }\n\n        return (\n            <span>\n                {operators.map((v, i) => (\n                    <span key={v.label || `operator-${i}`} style={{marginLeft:16}}>\n                        {v}\n                        {operatorsLength === i + 1 ? '' : <span className=\"operator-divider\"/>}\n                    </span>\n                ))}\n            </span>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport {\n    Form,\n    InputNumber,\n    Input,\n    Select,\n    TreeSelect,\n    Checkbox,\n    Radio,\n    Switch,\n    DatePicker,\n    TimePicker,\n    Cascader,\n} from 'antd';\nimport './index.less';\n\nconst {TextArea, Password} = Input;\nconst FormItem = Form.Item;\n\n// input hidden number textarea password mobile email select select-tree checkbox radio switch date time date-time cascader\n\n/**\n * 类似 input 元素\n * @param type\n * @returns {boolean}\n */\nfunction isInputLikeElement(type) {\n    return [\n        'input',\n        'hidden',\n        'number',\n        'textarea',\n        'password',\n        'mobile',\n        'email',\n    ].includes(type);\n}\n\nfunction getElement(item) {\n    const {type = 'input', component, ...props} = item;\n\n    // 样式\n    // const width = props.width || '100%';\n    // const elementCommonStyle = {width};\n    // props.style = props.style ? {...elementCommonStyle, ...props.style} : elementCommonStyle;\n\n    // 如果 component 存在，说明是自定义组件\n    if (component) {\n        return typeof component === 'function' ? component() : component;\n    }\n\n    if (isInputLikeElement(type)) {\n        if (type === 'number') return <InputNumber {...props}/>;\n        if (type === 'textarea') return <TextArea {...props}/>;\n        if (type === 'password') return <Password {...props}/>;\n\n        return <Input type={type} {...props}/>;\n    }\n\n    if (type === 'select') {\n        const {options = [], ...others} = props;\n        return (\n            <Select {...others}>\n                {\n                    options.map(opt => <Select.Option key={opt.value} {...opt}>{opt.label}</Select.Option>)\n                }\n            </Select>\n        );\n    }\n\n    if (type === 'select-tree') return <TreeSelect {...props} treeData={props.options}/>;\n    if (type === 'checkbox-group') return <Checkbox.Group {...props}/>;\n    if (type === 'radio-group') return <Radio.Group {...props}/>;\n    if (type === 'cascader') return <Cascader {...props}/>;\n\n    if (type === 'checkbox') return <Checkbox {...props}>{props.label}</Checkbox>;\n\n    if (type === 'radio') return <Radio {...props}>{props.label}</Radio>;\n\n    if (type === 'switch') return <Switch {...props} style={{...props.style, width: 'auto'}}/>;\n\n    if (type === 'date') return <DatePicker {...props}/>;\n\n    if (type === 'date-range') return <DatePicker.RangePicker {...props}/>;\n\n    if (type === 'month') return <DatePicker.MonthPicker {...props}/>;\n\n    if (type === 'time') return <TimePicker {...props}/>;\n\n\n    throw new Error(`no such type: ${type}`);\n}\n\nexport default class FormElement extends Component {\n    componentDidMount() {\n        const {labelWidth} = this.props;\n        if (labelWidth !== void 0) {\n            const label = this.container.querySelector('.ant-form-item-label');\n            if (label) label.style.flexBasis = typeof labelWidth === 'string' ? labelWidth : `${labelWidth}px`;\n        }\n    }\n\n    render() {\n        const {\n            form,\n            colon,\n            extra,\n            hasFeedback,\n            help,\n            label,\n            labelWidth,\n            width,\n            labelCol,\n            required,\n            validateStatus,\n            wrapperCol,\n\n            field,\n            decorator,\n\n            children,\n            ...others\n        } = this.props;\n\n        const {getFieldDecorator} = form;\n\n        let elementStyle = {width: '100%'};\n        if (width !== void 0) {\n            elementStyle.width = width;\n        }\n\n        if (others.style) {\n            elementStyle = {...elementStyle, ...others.style};\n        }\n\n        return (\n            <div\n                // className=\"form-element-flex-root\"\n                ref={node => this.container = node}\n            >\n                <FormItem\n                    colon={colon}\n                    extra={extra}\n                    hasFeedback={hasFeedback}\n                    help={help}\n                    label={label}\n                    labelCol={labelCol}\n                    required={required}\n                    validateStatus={validateStatus}\n                    wrapperCol={wrapperCol}\n                >\n                    {getFieldDecorator(field, decorator)(\n                        getElement({...others, style: elementStyle})\n                    )}\n                    {children}\n                </FormItem>\n            </div>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {Table, Button, Form} from 'antd';\nimport 'antd/lib/form/style/css';\nimport uuid from 'uuid/v4';\nimport FormElement from '../form-element';\nimport classnames from 'classnames';\nimport './index.less';\n\n\nclass FieldsTable extends Component {\n    static propTypes = {\n        formRef: PropTypes.func,\n        dataSource: PropTypes.array,\n        onChange: PropTypes.func,\n        columns: PropTypes.array,\n        rowKey: PropTypes.string.isRequired,\n        showAdd: PropTypes.bool,\n        addText: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n\n    };\n\n    static defaultProps = {\n        rowKey: 'id',\n        dataSource: [],\n        showAdd: true,\n        addText: '添加',\n        onChange: () => true,\n    };\n\n    state = {};\n\n    componentWillMount() {\n        const {formRef, form, tabRef} = this.props;\n        if (formRef) formRef(form);\n        if (tabRef) tabRef(this);\n    }\n\n    renderColumns = (text, record, column) => {\n        let {dataIndex, props} = column;\n        if (!props) return text;\n\n        const {editable = true, showEdit = true} = record;\n\n        if (editable === false || showEdit === false) return text;\n\n        if (editable && editable.length && editable.indexOf(dataIndex) === -1) return text;\n\n        if (props.dataIndex) dataIndex = props.dataIndex;\n\n        const {onChange, form, rowKey} = this.props;\n        const id = record[rowKey];\n\n        props.field = `${dataIndex}-${id}`;\n        props.colon = false;\n        props.label = props.label === void 0 ? ' ' : props.label;\n        props.labelWidth = props.labelWidth === void 0 ? 20 : props.labelWidth;\n\n        if (!record.__form_fields) record.__form_fields = new Set();\n        record.__form_fields.add(props.field);\n\n        if (!record.__validate) {\n            record.__validate = (fields, callback) => {\n                if (!callback) {\n                    callback = fields;\n                    fields = void 0;\n                }\n\n                let validateFields = Array.from(record.__form_fields);\n                if (fields) {\n                    validateFields = fields.map(item => `${item}-${id}`)\n                }\n\n\n                const {form} = this.props;\n\n                form.validateFieldsAndScroll(validateFields, (err, values) => {\n                    const realValues = {};\n\n                    Object.keys(values).forEach(key => {\n                        const realKey = key.split('-')[0];\n                        realValues[realKey] = values[key];\n                    });\n\n                    callback(err, realValues);\n                });\n            };\n        }\n\n        if (!record.save) {\n            record.save = (callback) => {\n                // 单独校验此行\n                record.__validate((err, values) => {\n                    if (err) return;\n                    // values 编辑过的新数据\n                    // console.log(values);\n                    // record 原始未编辑过得数据\n                    // console.log(record);\n                    const newRecord = {...record, ...values, showEdit: false};\n                    const dataSource = [...this.props.dataSource];\n                    const index = dataSource.findIndex(item => item.id === newRecord.id);\n\n                    dataSource.splice(index, 1, newRecord);\n                    if (callback) {\n                        callback(dataSource, () => {\n                            onChange(dataSource)\n                        })\n                    } else\n                        onChange(dataSource);\n                });\n            }\n        }\n        if (!record.cancel) {\n            record.cancel = () => {\n                const {columns} = this.props;\n                const dataSource = [...this.props.dataSource];\n                let isNoting = true;\n                if (columns && columns.length) {\n                    const r = dataSource.find(item => item.id === record.id);\n                    columns.forEach(({dataIndex}) => {\n                        if (dataIndex) {\n                            if (r[dataIndex]) isNoting = false\n                        }\n                    })\n                }\n                if (isNoting) {\n                    const newDataSource = dataSource.filter(item => item.id !== record.id);\n                    onChange(newDataSource);\n                } else {\n                    const r = dataSource.find(item => item.id === record.id);\n                    r.showEdit = false;\n                    onChange(dataSource);\n                }\n            }\n        }\n\n\n        const decorator = {};\n\n        decorator.initialValue = record[dataIndex];\n\n        return <FormElement form={form} {...props} decorator={{...props.decorator, ...decorator}}/>\n    };\n\n    handleAddNewRow = (id = uuid()) => {\n        const {dataSource, onChange, columns, rowKey, newRecord} = this.props;\n        const record = {__add: true, ...newRecord};\n\n        if (columns && columns.length) {\n            columns.forEach(({dataIndex}) => {\n                if (dataIndex) {\n                    record[dataIndex] = void 0;\n                }\n            })\n        }\n        record[rowKey] = uuid();\n        record[id] = id;\n\n        onChange([...dataSource, {...record}]);\n    };\n\n    render() {\n        let {\n            dataSource,\n            onChange,\n            style,\n            formRef,\n            className,\n            rowKey,\n            showAdd,\n            addText,\n            emptyText,\n            footer,\n            ...others\n        } = this.props;\n\n        const tableDataSource = [...dataSource];\n\n        const columns = this.props.columns.map(item => {\n            const {render} = item;\n            return {\n                ...item,\n                render: (text, record) => {\n                    if (render) text = render(text, record);\n                    return this.renderColumns(text, record, item);\n                },\n            }\n        });\n\n        const classNames = classnames('sx-table-editable', className);\n\n        let ft;\n\n        if (footer) ft = footer;\n\n        if (showAdd) ft = () => (\n            <Button\n                icon=\"plus\"\n                style={{width: '100%', height: '80px', lineHeight: '80px'}}\n                type=\"dashed\"\n                onClick={this.handleAddNewRow}\n            >{addText}</Button>\n        );\n\n        return (\n            <Table\n                className={classNames}\n                bordered={false}\n                pagination={false}\n                {...others}\n                locale={{emptyText:emptyText}}\n                columns={columns}\n                dataSource={tableDataSource}\n                rowKey={rowKey}\n                footer={ft}\n            />\n        );\n    }\n}\n\nexport default Form.create()(FieldsTable)\n","import React, {Component} from 'react';\nimport {\n    Form,\n    Row,\n    Col,\n    Button,\n    Popconfirm,\n} from 'antd';\nimport Operator from \"../operator\";\nimport TableEditable from \"../table-editable\";\n\nexport default class ConfigPageField extends Component {\n    state = {\n        dataSource: [],\n        pageName: \"页面\",\n        pageInfo: undefined,\n    };\n\n    fieldsColumns = [\n        {\n            title: '变量名',\n            dataIndex: 'name',\n            key: 'name',\n            width: '33%',\n            props: {\n                type: 'input',\n                placeholder: '请输入变量名',\n                decorator: {\n                    rules: [\n                        {required: true, message: '请输入变量名！'},\n                        {\n                            validator: (rule, value, callback) => {\n\n                                const reg = RegExp(/^(_|[a-z]|[A-Z]).*/);\n                                if (value && !reg.test(value)) {\n                                    callback('必须下划线或字母开头');\n                                    return\n                                }\n                                callback()\n\n                            },\n                        }\n                    ],\n                },\n                onPressEnter: (e) => {\n                    const currentTr = e.target.parentNode.parentNode.parentNode.parentNode.parentNode.parentNode.parentNode;\n                    currentTr.getElementsByTagName('input')[1].focus();\n                },\n            },\n        },\n        {\n            title: '变量值',\n            dataIndex: 'value',\n            key: 'value',\n            width: '33%',\n            props: {\n                type: 'input',\n                placeholder: '请输入',\n                decorator: {\n                    rules: [\n                        {required: true, message: '请输入变量值！'},\n                    ],\n                    onKeyUp: (e) => {\n                        console.log(e);\n                    },\n                },\n            },\n        },\n        {\n            title: '操作',\n            render: (text, record) => {\n                // 注意这 showEdit 和 editable 要默认为true\n                const {showEdit = true, editable = true} = record;\n                const _that = this;\n\n                const {disable} = this.props;\n                if (disable) return void 0;\n\n                if (showEdit && editable) {\n                    return (\n                        <Operator items={[\n                            {\n                                label: '保存', onClick: () => {\n                                    record.save((dataSource, process) => {\n                                        console.log(dataSource);\n                                        const newDataSource = dataSource.filter(item => item.name).map(item => ({\n                                            id: item.id,\n                                            name: item.name,\n                                            value: item.value\n                                        }));\n                                        const onSave = _that.props.onSave;\n                                        if (onSave) onSave(newDataSource, process);\n                                        else process()\n\n                                    });\n                                }\n                            },\n                            {label: '取消', onClick: record.cancel},\n                        ]}/>\n                    );\n                }\n                const {id, value, name} = record;\n\n                function del() {\n                    const delItems = [_that.state.dataSource.find(item => item.id === id)].map(item => ({\n                        id: item.id,\n                        name: item.name,\n                        value: item.value\n                    }));\n                    const onDel = _that.props.onDel;\n                    if (onDel) onDel(delItems, () => {\n                        const dataSource = _that.state.dataSource.filter(item => item.id !== id);\n                        _that.setState({dataSource});\n                    });\n                    else {\n                        const dataSource = _that.state.dataSource.filter(item => item.id !== id);\n                        _that.setState({dataSource});\n                    }\n\n                }\n\n                const deleteItem = {\n                    label: '删除',\n                    color: 'red',\n                    confirm: {\n                        title: `您确定要删除\"${name || value}\"吗？`,\n                        onConfirm: del,\n                    },\n                };\n\n                // 什么信息没填写，直接删除\n                if (!value && !name) {\n                    Reflect.deleteProperty(deleteItem, 'confirm');\n                    deleteItem.onClick = del;\n                }\n                return (\n                    <Operator items={[\n                        {\n                            label: '编辑',\n                            disabled: editable === false,\n                            onClick: () => {\n                                const dataSource = [..._that.state.dataSource];\n                                const r = dataSource.find(item => item.id === record.id);\n                                r.showEdit = true;\n                                _that.setState({dataSource});\n                            }\n                        },\n                        deleteItem\n                    ]}/>\n                );\n            }\n        }\n    ];\n\n    componentWillReceiveProps(nextProps) {\n        if (!this.comparePageInfo(this.props.pageInfo, nextProps.pageInfo)) {\n            const pageInfo = nextProps.pageInfo;\n            if (pageInfo) {\n                pageInfo.data.forEach(item=>(item.showEdit= false));\n                console.log('componentWillReceiveProps',pageInfo.data);\n                this.setState({\n                    dataSource: pageInfo.data,\n                    pageName: `【${pageInfo.title}】`,\n                    pageInfo: pageInfo\n                });\n            }\n        }\n    }\n\n    comparePageInfo(a, b) {\n        if (a.key !== b.key)\n            return false;\n        if (a.data.length !== b.data.length)\n            return false;\n        for (const i in a.data) {\n            if (a.data[i].name !== b.data[i].name || a.data[i].value !== b.data[i].value)\n                return false;\n        }\n        return true;\n\n    }\n\n\n    componentWillMount() {\n        const {formRef, form, validate, pageInfo} = this.props;\n        if (formRef) formRef(form);\n        if (validate) validate(this.validate);\n\n        if (pageInfo) {\n            for (const index in pageInfo.data) {\n                pageInfo.data[index].showEdit = false\n            }\n\n            this.setState({\n                dataSource: pageInfo.data,\n                pageName: `【${pageInfo.title}】`,\n                pageInfo: pageInfo,\n            })\n        }\n    }\n\n    validate = () => {\n        const {form} = this.props;\n\n        const promises = [\n            form, this.fieldsTableForm,\n        ].map(item => new Promise((resolve, reject) => {\n            item.validateFieldsAndScroll((err, values) => {\n                if (err) {\n                    reject(err);\n                } else {\n                    resolve(values)\n                }\n            });\n        }));\n\n        return Promise.all(promises).then(([listPage]) => listPage);\n    };\n\n    renderTableTitle = (field) => {\n        const {disable} = this.props;\n        return (\n            <div>\n                <p style={{fontSize: 20, color: \"#333\", fontWeight: \"bold\"}}>{`配置${this.state.pageName}变量`}</p>\n                {(!disable) && <Row type={'flex'} justify={'end'} style={{marginBottom: 8,marginRight:16}}>\n                    <Col>\n                        <this.ClearTable field={field} type={'link'}/>\n                    </Col>\n                    <Col>\n                        <a style={{marginLeft: 8, color: '#1890ff'}} type=\"primary\" onClick={() => this.handleAdd()}>添加</a>\n                    </Col>\n                </Row>}\n            </div>\n        );\n    };\n\n    ClearTable = ({field, type = 'danger'}) => {\n        const {dataSource} = this.state;\n        const isEmpty = !dataSource || !dataSource.length || (dataSource.length === 1 && !dataSource[0].title);\n\n        if (isEmpty) return null;\n\n        return (\n            <Popconfirm title=\"您确认清空吗？\" onConfirm={() => this.setState({dataSource: []})}>\n                {type === 'link' ? (\n                    <a style={{marginLeft: 8, color: 'red'}}>清空</a>\n                ) : (\n                    <Button style={{marginLeft: 8}} type={type}>清空</Button>\n                )}\n            </Popconfirm>\n        );\n    };\n\n\n    handleAdd = () => {\n        this.tab.handleAddNewRow()\n    };\n    handleChange = (dataSource) => {\n        this.setState({dataSource});\n    };\n\n\n    render() {\n        const {emptyText='暂无数据'}=this.props;\n        return (\n            <div style={{padding: 16, background: \"#fff\", height: \"100%\"}}>\n                {\n                    this.renderTableTitle('fields')\n                }\n                <Form>\n                    <TableEditable\n                        tabRef={ref => this.tab = ref}\n                        style={{background: \"#fff\"}}\n                        size=\"small\"\n                        emptyText={emptyText}\n                        onChange={this.handleChange}\n                        dataSource={this.state.dataSource}\n                        showAdd={false}\n                        formRef={form => this.fieldsTableForm = form}\n                        columns={this.fieldsColumns}\n                    />\n                </Form>\n            </div>\n        );\n    }\n}\n","import React from \"react\";\n\n\nexport default class BasePages extends React.Component {\n\n\n\n}\n","export default class Strings {\n    static success = '成功';\n    static error = '失败';\n    static noAccess = '无权访问此资源';\n    static  notFound = '访问资源不存在';\n    static serverBusy = '服务器繁忙';\n    static timeOut = '超时';\n}\n","import {notification} from 'antd';\nimport Strings from \"./strings\";\n\n// import {getCurrentLocal} from '@/i18n';\n\n/**\n * 尝试获取错误信息 errorTio > resData.message > error.message > '未知系统错误'\n *\n * @param error\n * @param errorTip\n * @returns {*}\n */\nfunction getErrorTip({error, errorTip}) {\n\n    if (errorTip && errorTip !== true) return errorTip;\n\n    if (error && error.response) {\n        const {status, message} = error.response;\n\n\n        // 后端自定义信息\n        if (message) return message;\n\n        if (status === 403) {\n            return Strings.noAccess;\n        }\n\n        if (status === 404) {\n            return Strings.notFound;\n        }\n\n        if (status === 504) {\n            return Strings.serverBusy;\n        }\n\n        if (status === 500) {\n            return Strings.serverBusy;\n        }\n    }\n\n    if (error && error.message && error.message.startsWith('timeout of')) return Strings.timeOut;\n\n    if (error) return error.message;\n\n    return Strings.serverBusy;\n}\n\nexport default function handleError({error, errorTip}) {\n\n    if (errorTip === false) return;\n\n    const description = getErrorTip({error, errorTip});\n\n    notification.error({\n        message: Strings.error,\n        description,\n    });\n}\n","import axios from 'axios';\nimport {stringify} from 'qs';\nimport handleError from './handle-error';\nimport handleSuccess from './handle-success';\n\n\nexport default class Request {\n    /**\n     * 构造函数传入的是自定义的一些配置，\n     * axios相关的全局配置使用sxAjax实例进行配置：\n     * sxAjax.defaults.xxx sxAjax.mockDefaults.xxx进行配置\n     *\n     * @param onShowErrorTip 如何显示错误提示\n     * @param onShowSuccessTip 如何显示成功提示\n     * @param isMock 区分哪些请求需要mock，比如：url以约定'/mock'开头的请求，使用mock等方式。\n     */\n    constructor({\n                    onShowSuccessTip = (/* response, successTip  */) => true,\n                    onShowErrorTip = (/* err, errorTip */) => true,\n                    isMock = (/* url, data, method, options */) => false,\n                } = {}) {\n        this.instance = axios.create();\n        this.mockInstance = axios.create();\n        this.setDefaultOption(this.instance);\n        this.setDefaultOption(this.mockInstance);\n        this.defaults = this.instance.defaults;\n\n        this.onShowSuccessTip = onShowSuccessTip;\n        this.onShowErrorTip = onShowErrorTip;\n    }\n\n    setDefaultOption(instance) {\n        instance.defaults.timeout = 10000;\n        // instance.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded;charset=UTF-8';\n        // instance.defaults.headers.put['Content-Type'] = 'application/x-www-form-urlencoded;charset=UTF-8';\n        instance.defaults.headers.post['Content-Type'] = 'application/json';\n        instance.defaults.headers.put['Content-Type'] = 'application/json';\n        instance.defaults.baseURL = '/';\n        // instance.defaults.withCredentials = true; // 跨域携带cookie\n    }\n\n    /**\n     *\n     * @param url\n     * @param d\n     * @param method\n     * @param options 配置数据，最常用是【successTip】属性，也可以吧url data method覆盖掉；\n     * @returns {Promise}\n     */\n    request(url, d = {}, method = 'get', options = {}) {\n        // 有 null的情况\n        let data = d || {};\n        options = options || {};\n\n        let {\n            successTip = false, // 默认false，不展示\n            errorTip, //  = method === 'get' ? '获取数据失败！' : '操作失败！', // 默认失败提示\n            noEmpty = false,\n        } = options;\n\n        // 删除 参数对象中为 null '' undefined 的数据，不发送给后端\n        if (noEmpty === true && typeof data === 'object' && !Array.isArray(data)) {\n            const noEmptyData = {};\n\n            Object.keys(data).forEach(key => {\n                const value = data[key];\n                if (value !== null && value !== '' && value !== void 0) {\n                    noEmptyData[key] = value;\n                }\n            });\n\n            data = noEmptyData;\n        }\n\n        const CancelToken = axios.CancelToken;\n        let cancel;\n\n        const isGet = method === 'get';\n        let instance = this.instance;\n\n        /*\n         * 封装内不做处理，如果需要，通过如下方式，或者其他方法自行处理\n         * axiosInstance.interceptors.request.use(cfg => {\n         *   // Do something before request is sent\n         *   return cfg;\n         * }, error => {\n         *   // Do something with request error\n         *   return Promise.reject(error);\n         * });\n         *\n         * */\n\n        /*\n        *\n        * Content-Type application/x-www-form-urlencoded 存在问题\n        * 参见：https://github.com/axios/axios/issues/362\n        *\n        * */\n        const defaultsContentType = instance.defaults.headers[method]['Content-Type'] || '';\n        const contentType = (options.headers && options.headers['Content-Type']) || '';\n        if (\n            (defaultsContentType && defaultsContentType.indexOf('application/x-www-form-urlencoded') > -1)\n            || contentType.indexOf('application/x-www-form-urlencoded') > -1\n        ) {\n            data = stringify(data);\n        }\n\n        let params = {};\n        if (isGet) {\n            params = data; // params 是get请求拼接到url上的\n            data = {}; // data 是put、post 等请求发送的数据\n        }\n\n        const ajaxPromise = new Promise((resolve, reject) => {\n            instance({\n                method,\n                url,\n                data,\n                params,\n                cancelToken: new CancelToken(c => cancel = c),\n                ...options,\n            }).then(response => {\n\n                if (response.data.code && response.data.code !== 1) {\n                    const desc = response.data.desc;\n                    this.onShowErrorTip(response.data, desc ? desc : \"未知错误\");\n                    reject(response.data);\n                }\n                else {\n                    let localTips = successTip;\n                    if (!localTips && response.data.desc)\n                        localTips = response.data.desc;\n                    this.onShowSuccessTip(response, localTips);\n                    resolve(response.data, response);\n                }\n            }, err => {\n                const isCanceled = err && err.message && err.message.canceled;\n                if (isCanceled) return; // 如果是用户主动cancel，不做任何处理，不会触发任何函数\n                this.onShowErrorTip(err, errorTip);\n                reject(err);\n            }).catch(error => {\n                reject(error);\n            });\n        });\n        ajaxPromise.cancel = function () {\n            cancel({\n                canceled: true,\n            });\n        };\n        return ajaxPromise;\n    }\n\n    /**\n     * 发送一个get请求，一般用于查询操作\n     * @param {string} url 请求路径\n     * @param {object} [params] 传输给后端的数据，正常请求会转换成query string 拼接到url后面\n     * @param {object} [options] axios 配置参数\n     * @returns {Promise}\n     */\n    get(url, params, options) {\n        return this.request(url, params, 'get', options);\n    }\n\n    /**\n     * 发送一个post请求，一般用于添加操作\n     * @param {string} url 请求路径\n     * @param {object} [data] 传输给后端的数据\n     * @param {object} [options] axios 配置参数\n     * @returns {Promise}\n     */\n    post(url, data, options) {\n        return this.request(url, data, 'post', options);\n    }\n\n\n    /**\n     * 发送一个put请求，一般用于更新操作\n     * @param {string} url 请求路径\n     * @param {object} [data] 传输给后端的数据\n     * @param {object} [options] axios 配置参数\n     * @returns {Promise}\n     */\n    put(url, data, options) {\n        return this.request(url, data, 'put', options);\n    }\n\n    /**\n     * 发送一个patch请求，一般用于更新部分数据\n     * @param {string} url 请求路径\n     * @param {object} [data] 传输给后端的数据\n     * @param {object} [options] axios 配置参数\n     * @returns {Promise}\n     */\n    patch(url, data, options) {\n        return this.request(url, data, 'patch', options);\n    }\n\n    /**\n     * 发送一个delete请求，一般用于删除数据，params会被忽略（http协议中定义的）\n     * @param {string} url 请求路径\n     * @param {object} [data] 传输给后端的数据\n     * @param {object} [options] axios 配置参数\n     * @returns {Promise}\n     */\n    del(url, data, options) {\n        return this.request(url, data, 'delete', options);\n    }\n}\n\n\n/**\n * ajax工具，含有errorTip 和 successTip\n * @type {Request}\n */\nexport const request = new Request({\n    onShowErrorTip: (error, errorTip) => handleError({error, errorTip}),\n    onShowSuccessTip: (response, successTip) => handleSuccess({successTip}),\n});\n\n// 默认配置\nrequest.defaults.baseURL = 'http://localhost:9000';\nrequest.defaults.timeout = 1000 * 30;\n\n\n// 请求前拦截\nrequest.instance.interceptors.request.use(cfg => {\n    // Do something before request is sent\n    return cfg;\n}, error => {\n    // Do something with request error\n    return Promise.reject(error);\n});\n\n\n","import {notification} from 'antd';\nimport Strings from \"./strings\";\n// import {getCurrentLocal} from '@/i18n';\n\nexport default function handleSuccess({successTip}) {\n    successTip && notification.success({\n        message: Strings.success,\n        description: successTip,\n    })\n}\n","import * as React from \"react\";\nimport * as antd from \"antd\";\nimport {Col, Icon, Layout, Menu, Row, Modal} from \"antd\";\nimport {generateList, getParentKey} from \"../../library/tree-utils\";\nimport FromModal from '../../components/FromModal'\nimport RightClickMenu from '../../components/RightClickMenu'\nimport ConfigPageField from \"../../components/config-page/ConfigPageField\";\nimport BasePages from \"../base/BasePages\";\nimport {request} from \"../../library/request\";\nimport {Empty} from \"antd\";\n\nconst {Content} = Layout;\nconst {Tree, Input} = antd;\nconst {TreeNode} = Tree;\nconst {Search} = Input;\nconst {confirm} = Modal;\n\n\nexport default class TestPages extends BasePages {\n\n    dataList = [];\n    state = {\n        expandedKeys: [],\n        searchValue: '',\n        autoExpandParent: true,\n        collapsed: false,\n        data: undefined,\n        menuItemIndex: 0,\n        pages: undefined,\n        nodeKey: undefined,\n        showAddVersionModal: false,\n        showCopyVersionModal: false,\n        confirmLoading: false,\n    };\n    version_modal_field = [\n        {\n            label: \"版本名称\",\n            field: \"version_name\",\n            props: {decorator: {rules: [{required: true, message: \"请输入版本名称\"}]}}\n        },\n        {\n            label: \"页面根路径\",\n            field: \"path\",\n            props: {decorator: {rules: [{required: true, message: \"请输入页面跟路径\"}]}}\n        }\n    ];\n    copy_version_modal_field = [\n        {\n            label: \"版本名称\",\n            field: \"version_name\",\n            props: {decorator: {rules: [{required: true, message: \"请输入版本名称\"}]}}\n        },\n        {\n            label: \"原页面根路径\",\n            field: \"old_path\",\n            props: {disabled: true, decorator: {}}\n        },\n        {\n            label: \"页面根路径\",\n            field: \"path\",\n            props: {decorator: {}}\n        }\n    ];\n\n    onExpand = expandedKeys => {\n        this.setState({\n            expandedKeys,\n            autoExpandParent: false,\n        });\n    };\n\n    onChange = e => {\n        const {value} = e.target;\n        const expandedKeys = this.dataList\n            .map(item => {\n                if (item.title.indexOf(value) > -1) {\n                    return getParentKey(item.key, this.state.pages);\n                }\n                return null;\n            })\n            .filter((item, i, self) => item && self.indexOf(item) === i);\n        this.setState({\n            expandedKeys,\n            searchValue: value,\n            autoExpandParent: true,\n        });\n    };\n\n    onSelected = e => {\n        const nodeKey = this.getNodeByKey(e[0]) && this.getNodeByKey(e[0]).key;\n        this.setState({nodeKey})\n    };\n\n    getNodeByKey(key) {\n        const item = this.dataList.find(item => item.key === key);\n        return item && item.data;\n    }\n\n    showCopyVersionModal() {\n        const menu = this.state.data[this.state.menuItemIndex];\n        this.copy_version_modal_field[0].props.decorator.initialValue = \"Copy of \" + menu.name;\n        this.copy_version_modal_field[1].props.decorator.initialValue = menu.path;\n        this.copy_version_modal_field[2].props.decorator.initialValue = menu.path;\n        this.setState({showCopyVersionModal: true})\n    }\n\n    //=====================request========================================>\n    onSavePageData(source, process) {\n        request.post('/save_page_data', {\n            version_id: this.state.data[this.state.menuItemIndex].version_id,\n            node_key: this.state.nodeKey,\n            data: source\n        })\n            .then((res) => {\n                const code = res.code;\n                if (code === 1) {\n                    process();\n                    this.get_pages()\n                }\n            })\n            .finally(() => this.setState({loading: false}));\n    }\n\n    onDelPageData(delItems, process) {\n        request.post('/del_page_data', {\n            version_id: this.state.data[this.state.menuItemIndex].version_id,\n            node_key: this.state.nodeKey,\n            data: delItems\n        })\n            .then((res) => {\n                const code = res.code;\n                if (code === 1) {\n                    process();\n                    this.get_pages()\n                }\n            })\n            .finally(() => this.setState({loading: false}));\n    }\n\n    onAddVersion(values, process) {\n        request.post('/add_version', values)\n            .then((res) => {\n                const code = res.code;\n                if (code === 1) {\n                    process(true);\n                    this.setState({showAddVersionModal: false});\n                    this.get_pages()\n                }\n            })\n            .finally(() => process());\n    }\n\n    onCopyVersion(values, process) {\n        values.version_id = this.state.data[this.state.menuItemIndex].version_id;\n        if (!values.path) values.path = values.old_path;\n        request\n            .post('/copy_version', values)\n            .then((res) => {\n                const code = res.code;\n                if (code === 1) {\n                    process(true);\n                    this.setState({showCopyVersionModal: false});\n                    this.get_pages()\n                }\n            })\n            .finally(() => process());\n    }\n\n    onDelVersion = () => {\n        this.setState({loading: true});\n        request.post('/del_version', {version_id: this.state.data[this.state.menuItemIndex].version_id})\n            .then((res) => {\n                const code = res.code;\n                if (code === 1) {\n                    this.get_pages()\n                }\n            })\n            .finally(() => this.setState({loading: false}));\n    };\n\n\n    componentDidMount() {\n        this.setState({loading: true});\n        this.get_pages()\n    }\n\n    get_pages() {\n        request\n            .get('/get_version_pages', null)\n            .then((res) => {\n                const data = res.data;\n                const menuItemIndex = Math.min(this.state.menuItemIndex, data.length - 1);\n                this.switchMenItem(menuItemIndex, data);\n            })\n            .finally(() => this.setState({loading: false}));\n    }\n\n    switchMenItem(menuItemIndex, data) {\n        if (menuItemIndex < 0) menuItemIndex = 0;\n        const item = data[menuItemIndex];\n        const pages = item && item.pages;\n        this.dataList = [];\n        if (pages)\n            generateList(pages, this.dataList);\n        this.setState({pages, menuItemIndex, data})\n    }\n\n    //=====================request========================================>\n    render() {\n        const {searchValue, expandedKeys, autoExpandParent, data, pages} = this.state;\n        console.log('pages', pages);\n        console.log('data', data);\n        console.log('index', this.state.menuItemIndex);\n        const optionMenus = [{key: 'add', name: \"创建新的版本计划\"}];\n        if (data && data.length > 0) {\n            optionMenus.push({key: 'copy', name: \"复制当前版本计划\"});\n            optionMenus.push({key: 'del', name: \"删除当前版本计划\"})\n        }\n        const node = this.getNodeByKey(this.state.nodeKey);\n        const loop = data =>\n            data && data.map(item => {\n                const index = item.title.indexOf(searchValue);\n                const beforeStr = item.title.substr(0, index);\n                const afterStr = item.title.substr(index + searchValue.length);\n                const title = index > -1 ? (\n                        <span>{beforeStr}<span style={{color: '#f50'}}>{searchValue}</span>{afterStr}</span>) :\n                    (<span>{item.title}</span>);\n                if (item.children) {\n                    return (\n                        <TreeNode key={item.key} title={title}>\n                            {loop(item.children)}\n                        </TreeNode>\n                    );\n                }\n                return <TreeNode key={item.key} title={title}/>;\n            });\n        return (\n\n            <Layout style={{padding: '2vh', height: \"90vh\", display: \"flex\", flexDirection: \"column\"}}>\n                <Content style={{background: \"#fff\", flex: 1}}>\n                    <Row type={'flex'}>\n                        <Col span={5}\n                             style={{\n                                 height: \"88vh\",\n                                 display: \"flex\",\n                                 flexDirection: \"column\",\n                                 borderRight: \"0.1px solid\",\n                                 borderColor: \"#efefef\",\n                             }}>\n\n                            <div style={{width: \"100%\", height: '6vh'}}>\n\n                                <div\n                                    style={{\n                                        width: \"100%\",\n                                        height: \"100%\",\n                                        display: \"flex\",\n                                        paddingTop: '2vh',\n                                        flexDirection: \"column\",\n                                        alignItems: 'center',\n                                        justifyContent: \"center\",\n                                        zIndex: 0\n                                    }}>\n                                    <p style={{fontSize: 15, color: \"#777\"}}>版本计划</p>\n                                </div>\n                                <RightClickMenu\n                                    menu={optionMenus}\n                                    onClick={(e) => {\n                                        if (e.key === \"add\") this.setState({showAddVersionModal: true});\n                                        else if (e.key === 'copy') this.showCopyVersionModal();\n                                        else if (e.key === 'del') {\n                                            confirm({\n                                                title: `你要删除【${data[this.state.menuItemIndex].name}】吗?`,\n                                                content: '删除后将无法恢复，请确认',\n                                                onOk: this.onDelVersion,\n                                            });\n                                        }\n                                    }}>\n                                    <Icon type={'menu'}\n                                          style={{position: 'absolute', top: '2.3vh', right: 16, zIndex: 2}}/>\n                                </RightClickMenu>\n\n                            </div>\n\n                            <div className={'hide-scrollbar'} style={{height: '80vh', overflowY: 'scroll'}}>\n                                {\n                                    data && data.length > 0 ? <Menu theme={'light'} defaultSelectedKeys={['0']}>\n\n                                        {\n                                            data.map((item, index) => (\n\n                                                <Menu.Item key={`${index}`}\n                                                           onClick={() => this.switchMenItem(index, data)}>\n                                                    <Icon type=\"file\"/>\n                                                    <span>{item.name}</span>\n                                                </Menu.Item>\n\n                                            ))\n                                        }\n                                    </Menu> : <div><Empty image={Empty.PRESENTED_IMAGE_SIMPLE}\n                                                          style={{marginTop:\"20vh\"}}\n                                                          description={\"请在右上角菜单中创建版本计划\"}/>\n                                    </div>\n                                }\n                            </div>\n                        </Col>\n                        <Col span={19} style={{\n                            height: \"84vh\",\n                            display: \"flex\",\n                            flexDirection: \"row\"\n                        }}>\n                            <div style={{padding: 24, display: \"flex\", flexDirection: \"column\", flex: 1}}>\n                                {\n                                    (data && data.length !== 0) && pages && <Search style={{marginLeft: 16, width: \"80%\", height: 32}} placeholder=\"Search\"\n                                            onChange={this.onChange}/>\n                                }\n                                <div className={'hide-scrollbar'} style={{overflowY: 'scroll', flex: 1}}>\n                                    {\n                                        (data && data.length !== 0) && pages &&\n                                        <Tree\n                                            onExpand={this.onExpand}\n                                            expandedKeys={expandedKeys}\n                                            autoExpandParent={autoExpandParent}\n                                            onSelect={(item) => this.onSelected(item)}\n                                        >\n                                            {loop(pages)}\n                                        </Tree>}\n                                </div>\n                            </div>\n                            <div style={{width: 500, overflowY: 'scroll', flex: 1}}>\n                                {\n                                    ((node && node.type === \"class\") || (node && node.type === \"method\")) ?\n                                        <ConfigPageField\n                                            pageInfo={node}\n                                            onDel={(delItems, process) => this.onDelPageData(delItems, process)}\n                                            onSave={(source, process) => this.onSavePageData(source, process)}\n                                        /> : void 0\n                                }\n                            </div>\n                        </Col>\n                    </Row>\n                </Content>\n                <FromModal\n                    title=\"添加版本计划\"\n                    visible={this.state.showAddVersionModal}\n                    onOk={(values, process) => this.onAddVersion(values, process)}\n                    fields={this.version_modal_field}\n                    onCancel={() => this.setState({showAddVersionModal: false})}\n                />\n                <FromModal\n                    title=\"复制版本计划\"\n                    visible={this.state.showCopyVersionModal}\n                    onOk={(values, process) => this.onCopyVersion(values, process)}\n                    fields={this.copy_version_modal_field}\n                    onCancel={() => this.setState({showCopyVersionModal: false})}\n                />\n            </Layout>);\n\n    }\n\n\n}\n","import * as React from \"react\";\nimport * as antd from \"antd\";\nimport {Col, Row, Modal, notification} from \"antd\";\nimport {flatListById, flatListByKey, getParentKey} from \"../../library/tree-utils\";\nimport {Layout} from \"antd\";\nimport {Icon} from \"antd\";\nimport {Menu} from \"antd\";\nimport RightClickMenu from \"../../components/RightClickMenu\";\nimport FromModal from \"../../components/FromModal\";\nimport {Empty} from \"antd\";\nimport {Checkbox} from \"antd\";\nimport ConfigPageField from \"../../components/config-page/ConfigPageField\";\nimport BasePages from \"../base/BasePages\";\nimport {request} from \"../../library/request\";\n\nconst {Content} = Layout;\nconst {confirm} = Modal;\nconst {Tree} = antd;\nconst {TreeNode} = Tree;\n\n\nexport default class TestPlans extends BasePages {\n\n    flat_menu_data = {};\n    flat_pages_data = {};\n\n    state = {\n        expandedKeys: [],\n        autoExpandParent: true,\n        checkedKeys: [],\n        selectedKeys: [],\n        menuSelectedKeys: [],\n        menuItemId: undefined,\n        showAddPlanModal: false,\n        showAddSubPlanModal: false,\n        showCopyPlanModal: false,\n        pages: [],\n        data: [],\n        versions: [],\n        allCheckStatus: false\n    };\n\n    plan_modal_field = [\n        {\n            label: \"测试计划名称\",\n            field: \"name\",\n            props: {decorator: {rules: [{required: true, message: \"请输入版本名称\"}]}}\n        },\n        {\n            label: \"版本名称\",\n            field: \"version_id\",\n            props: {decorator: {rules: [{required: true, message: \"请选择版本名称\"}]}}\n        }\n    ];\n    sub_plan_modal_field = [\n        {\n            label: \"父测试计划名称\",\n            field: \"parent_name\",\n            props: {disabled: true, decorator: {}}\n        },\n        {\n            label: \"父版本名称\",\n            field: \"version_name\",\n            props: {disabled: true, decorator: {}}\n        },\n        {\n            label: \"测试计划名称\",\n            field: \"name\",\n            props: {decorator: {rules: [{required: true, message: \"请输入版本名称\"}]}}\n        }\n    ];\n    copy_plan_modal_field = [\n        {\n            label: \"原测试计划名称\",\n            field: \"old_name\",\n            props: {disabled: true, decorator: {}}\n        },\n        {\n            label: \"原版本名称\",\n            field: \"old_version_id\",\n            props: {disabled: true, decorator: {}}\n        },\n        {\n            label: \"测试计划名称\",\n            field: \"name\",\n            props: {decorator: {rules: [{required: true, message: \"请输入版本名称\"}]}}\n        },\n        {\n            label: \"版本名称\",\n            field: \"version_id\",\n            props: {decorator: {rules: [{required: true, message: \"请选择版本名称\"}]}}\n        }\n    ];\n\n\n    onExpand = expandedKeys => {\n        this.setState({\n            expandedKeys,\n            autoExpandParent: false,\n        });\n    };\n\n    onCheck = checkedKeys => {\n        // console.log('onCheck', checkedKeys);\n        this.updateCheckedKeys(checkedKeys)\n    };\n\n    onSelect = (selectedKeys, info) => {\n        // console.log('onSelect', selectedKeys);\n        this.setState({selectedKeys});\n    };\n\n    onAllSelected = e => {\n        let checkedKeys = [];\n        if (e.target.checked) {\n            const item = this.getVersionByMenuItem();\n            const pages = item && item.pages;\n            if (pages) {\n                checkedKeys = Object.keys(this.flat_pages_data);\n            }\n        }\n        this.onCheck(checkedKeys)\n\n    };\n\n\n    renderTreeNodes = data =>\n        data && data.map(item => {\n            if (item.children) {\n                return (\n                    <TreeNode title={item.title} key={item.key} dataRef={item}>\n                        {this.renderTreeNodes(item.children)}\n                    </TreeNode>\n                );\n            }\n            return <TreeNode key={item.key} {...item} />;\n        });\n\n    switchMenItem(menuItemId) {\n        if (!menuItemId) menuItemId = this.state.menuItemId;\n        const menuItem = this.getMenuItem(menuItemId);\n        const nodes = menuItem && menuItem.selected_page_node;\n        this.setState({menuItemId, checkedKeys: nodes, selectedKeys: [], menuSelectedKeys: [menuItemId]});\n        this.onCheckAllStatus(menuItemId);\n    }\n\n    onCheckAllStatus(menuItemId = this.state.menuItemId) {\n        const menuItem = this.getMenuItem(menuItemId);\n        let allCheckStatus = false;\n        if (menuItem) {\n            this.flat_pages_data = {};\n            const nodes = menuItem && menuItem.selected_page_node;\n            const version = menuItem && this.getVersionByMenuItem(menuItem);\n            const pages = menuItem ? version && version.pages : void 0;\n            if (pages) {\n                flatListByKey(pages, this.flat_pages_data);\n                if (nodes && nodes.length === Object.keys(this.flat_pages_data).length) {\n                    allCheckStatus = true;\n                }\n            }\n        }\n        this.setState({allCheckStatus})\n    }\n\n\n    showAddPlan() {\n        if (this.state.versions.length === 0) {\n            notification.open({\n                message: \"请先创建版本计划\",\n                description: '请在测试页面创建你的版本计划，测试计划需要关联到版本计划'\n            });\n            return\n        }\n        this.plan_modal_field[1].selectData = this.state.versions.filter(item=>!item.is_del).map(item => ({\n            name: item.name,\n            value: item.version_id\n        }));\n        this.setState({showAddPlanModal: true})\n    }\n\n    showAddSubPlan() {\n        const item = this.getMenuItem();\n        const version = this.getVersionByMenuItem();\n        this.sub_plan_modal_field[0].props.decorator.initialValue = item && item.name;\n        this.sub_plan_modal_field[1].props.decorator.initialValue = version && version.name;\n        this.setState({showAddSubPlanModal: true})\n    }\n\n    showCopyPlan() {\n\n        const item = this.getMenuItem();\n        const version = this.getVersionByMenuItem();\n\n        this.copy_plan_modal_field[0].props.decorator.initialValue = item && item.name;\n        this.copy_plan_modal_field[1].props.decorator.initialValue = version && version.name;\n        this.copy_plan_modal_field[2].props.decorator.initialValue = \"Copy Of \" + item && item.name;\n        this.copy_plan_modal_field[3].disabled = item.parent_id;\n        this.copy_plan_modal_field[3].selectData = this.state.versions.filter(item=>!item.is_del).map(item => ({\n            name: item.name,\n            value: item.version_id\n        }));\n        this.setState({showCopyPlanModal: true})\n    }\n\n    //=====================request======================//\n    componentDidMount() {\n        this.setState({loading: true});\n        this.get_pages();\n        this.get_plans();\n    }\n\n    get_plans() {\n        request.get('/get_plans', null)\n            .then((res) => {\n                const data = res.data;\n                let menuItemId = void 0;\n\n                if (data) {\n                    this.flat_menu_data = {};\n                    flatListById(data, this.flat_menu_data);\n                    menuItemId = data[0] && data[0].plan_id;\n                }\n                if (this.getMenuItem()) {\n                    menuItemId = this.state.menuItemId\n                }\n                this.setState({data});\n                this.switchMenItem(menuItemId)\n            }).finally(() => this.setState({loading: false}));\n    }\n\n    get_pages() {\n        request\n            .get('/get_plan_version_pages', null)\n            .then((res) => {\n                let data = res.data ? res.data : [];\n                this.setState({versions: data});\n                this.onCheckAllStatus()\n            })\n    }\n\n    onAddPlan(values, process, isRoot = true) {\n        const item = this.getMenuItem();\n        const parent_info = {};\n        if (!isRoot) {\n            if (!item) {\n                notification.open({\n                    message: \"请选择一个测试计划\",\n                    description: '添加子计划，需要选择一个测试计划'\n                });\n                return\n            }\n            parent_info.parent_id = item.plan_id;\n            parent_info.version_id = item.version_id\n        }\n        request\n            .post('/add_plan', {...values, ...parent_info})\n            .then((res) => {\n                const code = res.code;\n                if (code === 1) {\n                    process(true);\n                    this.setState({showAddPlanModal: false, showAddSubPlanModal: false});\n                    this.get_plans()\n                }\n            })\n            .finally(() => process());\n    }\n\n    onCopyPlan(values, process) {\n        const item = this.getMenuItem();\n        const old_info = {};\n        if (item) old_info.plan_id = item.plan_id;\n        request\n            .post('/copy_plan', {...values, ...old_info})\n            .then((res) => {\n                const code = res.code;\n                if (code === 1) {\n                    process(true);\n                    this.setState({showCopyPlanModal: false});\n                    this.get_plans()\n                }\n            })\n            .finally(() => process());\n    }\n\n    onDelPlan = () => {\n        request\n            .post('/del_plan', {plan_id: this.state.menuItemId,version_id:this.getMenuItem().version_id})\n            .then((res) => {\n                const code = res.code;\n                if (code === 1) {\n                    this.get_plans()\n                }\n            })\n    };\n\n\n    onSavePageData(source, process) {\n        request\n            .post('/save_plan_data', {\n                plan_id:this.getMenuItem().plan_id,\n                data: source\n            })\n            .then((res) => {\n                const code = res.code;\n                if (code === 1) {\n                    process();\n                    this.get_plans()\n                }\n            })\n    }\n\n    onDelPageData(delItems, process) {\n        request\n            .post('/del_plan_data', {\n                plan_id: this.getMenuItem().plan_id,\n                data: delItems\n            })\n            .then((res) => {\n                const code = res.code;\n                if (code === 1) {\n                    process();\n                    this.get_plans()\n                }\n            })\n    }\n\n    updateCheckedKeys(checkedKeys) {\n\n        request\n            .post('/update_selected_page_node', {plan_id: this.getMenuItem().plan_id, selected_page_node: checkedKeys})\n            .then((res) => {\n            }).finally(() => this.get_plans());\n    }\n\n    getMenuItem(menuItemId = this.state.menuItemId) {\n        return this.flat_menu_data[menuItemId]\n    }\n\n    getVersionByMenuItem(menuItem = this.getMenuItem()) {\n        if (menuItem)\n            return this.state.versions && this.state.versions.find(item => item.version_id === menuItem.version_id)\n    }\n\n    render() {\n        const {expandedKeys, autoExpandParent, checkedKeys, selectedKeys} = this.state;\n\n        const version = this.getVersionByMenuItem();\n        const page = version && version.pages;\n        const optionMenus = [{key: 'add', name: \"创建新的测试计划\"}];\n        const menuItem = this.getMenuItem();\n        // console.log('menuItem',menuItem);\n\n        let node = undefined;\n        if (menuItem) {\n            optionMenus.push({key: 'add_sub', name: \"创建子测试计划\"});\n            optionMenus.push({key: 'copy', name: \"复制当前测试计划\"});\n            optionMenus.push({key: 'del', name: \"删除当前测试计划\"});\n            node = {title: menuItem.name, ...menuItem, key: menuItem.plan_id, disable: false, emptyText: \"在这里配置全局变量\"};\n        }\n\n        function getKeyInArray(array) {\n            const key = array[0];\n            if (Array.isArray(key))\n                return getKeyInArray(key);\n            else return key\n        }\n\n        if (selectedKeys && selectedKeys.length > 0) {\n            const key = getKeyInArray(this.state.selectedKeys);\n            console.log(key);\n            const node_info = this.flat_pages_data[key];\n            console.log(this.flat_pages_data);\n            console.log(node_info);\n            if (node_info) node = {...node_info, disable: true, emptyText: \"请在版本计划添加该页面的变量\"}\n        }\n\n        const loop = data =>\n            data && data.map(item => {\n                if (item.children) {\n                    return (\n                        <TreeNode key={item.plan_id} title={item.name}>\n                            {loop(item.children)}\n                        </TreeNode>\n                    );\n                }\n                return <TreeNode key={item.plan_id} title={item.name}/>;\n            });\n\n        return (\n            <Layout style={{padding: '2vh', height: \"90vh\", display: \"flex\", flexDirection: \"column\"}}>\n                <Content style={{background: \"#fff\", flex: 1}}>\n                    <Row type={'flex'}>\n                        <Col span={5}\n                             style={{\n                                 height: \"88vh\",\n                                 display: \"flex\",\n                                 flexDirection: \"column\",\n                                 borderRight: \"0.1px solid\",\n                                 borderColor: \"#efefef\",\n                             }}>\n                            <div style={{width: \"100%\", height: '6vh'}}>\n\n                                <div\n                                    style={{\n                                        width: \"100%\",\n                                        height: \"100%\",\n                                        display: \"flex\",\n                                        paddingTop: '2vh',\n                                        flexDirection: \"column\",\n                                        alignItems: 'center',\n                                        justifyContent: \"center\",\n                                        zIndex: 0\n                                    }}>\n                                    <p style={{fontSize: 15, color: \"#777\"}}>测试计划</p>\n                                </div>\n                                <RightClickMenu\n                                    menu={optionMenus}\n                                    onClick={(e) => {\n                                        if (e.key === \"add\") this.showAddPlan();\n                                        if (e.key === \"add_sub\") this.showAddSubPlan();\n                                        else if (e.key === 'copy') this.showCopyPlan();\n                                        else if (e.key === 'del') {\n                                            const item = this.flat_menu_data[this.state.menuItemId]\n                                            confirm({\n                                                title: `你要删除【${item && item.name}】吗?`,\n                                                content: '删除后将无法恢复，请确认',\n                                                onOk: this.onDelPlan,\n                                            });\n                                        }\n                                    }}>\n                                    <Icon type={'menu'}\n                                          style={{position: 'absolute', top: '2.3vh', right: 16, zIndex: 2}}/>\n                                </RightClickMenu>\n\n                            </div>\n                            <div className={'hide-scrollbar'} style={{height: '80vh', overflowY: 'scroll'}}>\n\n                                {\n                                    this.state.data && this.state.data.length > 0 ?\n                                        <Tree theme={'light'}\n                                              selectedKeys={this.state.menuSelectedKeys}\n                                              onSelect={(selectedKeys) => this.switchMenItem(selectedKeys[0], this.state.data)}\n                                        >\n                                            {loop(this.state.data)}\n                                        </Tree> : <div><Empty image={Empty.PRESENTED_IMAGE_SIMPLE}\n                                                              style={{marginTop: \"20vh\"}}\n                                                              description={\"请在右上角菜单中创建测试计划\"}/>\n                                        </div>\n                                }\n                            </div>\n                        </Col>\n                        <Col span={19} style={{\n                            height: \"84vh\",\n                            display: \"flex\",\n                            flexDirection: \"row\"\n                        }}>\n                            <div style={{padding: 24, display: \"flex\", flexDirection: \"column\", flex: 1}}>\n                                <div style={{\n                                    display: 'flex', flexDirection: 'row', alignItems: 'center',\n                                    justifyContent: \"space-between\"\n                                }}>\n                                    <p style={{fontSize: 15, color: \"#777\", margin: 16}}>请选择测试页面</p>\n                                    {((menuItem && menuItem.children.length === 0)) &&\n                                    <Checkbox onChange={this.onAllSelected}\n                                              checked={this.state.allCheckStatus}\n                                              style={{padding: 2}}>全选</Checkbox>}\n                                </div>\n                                <div className={'hide-scrollbar'} style={{overflowY: 'scroll', flex: 1}}>\n                                    {\n                                        (menuItem && menuItem.children.length === 0) && page ? <Tree\n                                            onExpand={this.onExpand}\n                                            expandedKeys={expandedKeys}\n                                            autoExpandParent={autoExpandParent}\n                                            onCheck={this.onCheck}\n                                            checkedKeys={checkedKeys}\n                                            onSelect={this.onSelect}\n                                            selectedKeys={this.state.selectedKeys}\n                                            checkable>\n                                            {(menuItem && menuItem.children.length === 0) && this.renderTreeNodes(page)}\n                                        </Tree> : <div><Empty image={Empty.PRESENTED_IMAGE_SIMPLE}\n                                                              style={{marginLeft: \"-64%\"}}\n                                                              description={menuItem && menuItem.children.length > 0 ? \"请展开终端节点\" : \"暂无数据\"}/>\n                                        </div>\n                                    }\n                                </div>\n                            </div>\n                            <div style={{width: 500, overflowY: 'scroll', flex: 1}}>\n                                {\n                                    menuItem && <ConfigPageField\n                                        disable={node.disable}\n                                        emptyText={node.emptyText}\n                                        onDel={(delItems, process) => this.onDelPageData(delItems, process)}\n                                        onSave={(source, process) => this.onSavePageData(source, process)}\n                                        pageInfo={node}\n                                    />\n                                }\n                            </div>\n                        </Col>\n                    </Row>\n                </Content>\n\n                <FromModal\n                    title=\"创建测试计划\"\n                    visible={this.state.showAddPlanModal}\n                    onOk={(values, process) => this.onAddPlan(values, process)}\n                    fields={this.plan_modal_field}\n                    onCancel={() => this.setState({showAddPlanModal: false})}\n                />\n                <FromModal\n                    title=\"创建子测试计划\"\n                    visible={this.state.showAddSubPlanModal}\n                    onOk={(values, process) => this.onAddPlan(values, process, false)}\n                    fields={this.sub_plan_modal_field}\n                    onCancel={() => this.setState({showAddSubPlanModal: false})}\n                />\n                <FromModal\n                    title=\"复制测试计划\"\n                    visible={this.state.showCopyPlanModal}\n                    onOk={(values, process) => this.onCopyPlan(values, process)}\n                    fields={this.copy_plan_modal_field}\n                    onCancel={() => this.setState({showCopyPlanModal: false})}\n                />\n            </Layout>\n        );\n    }\n\n\n}\n","export default {\n\n    Android: {\n        ip: \"\",\n        port: \"\",\n        device_id: \"\"\n    },\n\n    IOS: {\n        ip: \"127.0.0.1\",\n        port: '8100',\n        device_id: \"\",\n\n    }\n\n}\n","import { Form, Input, Icon, Button } from 'antd';\nimport React from \"react\";\nimport uuid from \"uuid/v4\";\n\n\nclass DynamicFieldSet extends React.Component {\n\n\n    componentDidMount(){\n        const {form,formRef} = this.props;\n        formRef && formRef(form);\n        const {dataSource} = this.props;\n        const newSource = dataSource.map(item=>item.id);\n        form.setFieldsValue({dataSource:newSource});\n        const name = {};\n        dataSource.forEach(item =>{ name[item.id] = item.name});\n        this.setState({name:name});\n    }\n\n    remove = k => {\n        const { form } = this.props;\n        const dataSource = form.getFieldValue('dataSource');\n        if (dataSource.length === 1) {\n            return;\n        }\n        form.setFieldsValue({\n            dataSource: dataSource.filter(key => key !== k),\n        });\n    };\n\n    add = () => {\n        const { form } = this.props;\n        const dataSource = form.getFieldValue('dataSource');\n        const nextDataSource = dataSource.concat(uuid());\n        form.setFieldsValue({\n            dataSource: nextDataSource,\n        });\n    };\n\n\n\n    render() {\n        const { getFieldDecorator, getFieldValue } = this.props.form;\n        const formItemLayout = {\n            labelCol: {\n                xs: { span: 24 },\n                sm: { span: 4 },\n            },\n            wrapperCol: {\n                xs: { span: 24 },\n                sm: { span: 20 },\n            },\n        };\n        const formItemLayoutWithOutLabel = {\n            wrapperCol: {\n                xs: { span: 24, offset: 0 },\n                sm: { span: 20, offset: 4 },\n            },\n        };\n        getFieldDecorator('dataSource', { initialValue: [] });\n        const dataSource = getFieldValue('dataSource');\n        const formItems = dataSource.map((item, index) => {\n            return <Form.Item\n                {...(index === 0 ? formItemLayout : formItemLayoutWithOutLabel)}\n                label={index === 0 ? '应用包名' : ''}\n                required={false}\n                key={item}\n            >\n                {getFieldDecorator(`name[${item}]`, {\n                    validateTrigger: ['onChange', 'onBlur'],\n                    initialValue:this.state.name[item],\n                    rules: [\n                        {\n                            required: true,\n                            whitespace: true,\n                            message: \"请输入应用包名\",\n                        },\n                    ],\n                })(<Input placeholder=\"应用包名\" style={{ width: '60%', marginRight: 8 }} />)}\n                {dataSource.length > 1 ? (\n                    <Icon\n                        className=\"dynamic-delete-button\"\n                        type=\"minus-circle-o\"\n                        onClick={() => this.remove(item)}\n                    />\n                ) : null}\n            </Form.Item>\n        });\n        return (\n            <Form >\n                {formItems}\n                <Form.Item {...formItemLayoutWithOutLabel}>\n                    <Button type=\"dashed\" onClick={this.add} style={{ width: '60%' }}>\n                        <Icon type=\"plus\" /> 添加应用包名\n                    </Button>\n                </Form.Item>\n            </Form>\n        );\n    }\n}\n\nexport const ConfigAppField = Form.create({ name: 'dynamic_form_item' })(DynamicFieldSet);\n","import * as React from \"react\";\nimport {\n    Button,\n    Col,\n    Icon,\n    Layout,\n    List,\n    Pagination,\n    Row,\n    Select,\n    TreeSelect,\n    Steps,\n    Modal,\n    Divider,\n    Timeline\n} from \"antd\";\nimport Input from \"antd/es/input/Input\";\nimport {flatListById} from \"../../library/tree-utils\";\nimport {Typography} from 'antd';\nimport BasePages from \"../base/BasePages\";\nimport {request} from \"../../library/request\";\nimport global from \"../../application/global\";\nimport {Tabs} from 'antd';\nimport {ConfigAppField} from \"../../components/config-appId/ConfigAppField\";\n\nconst {TabPane} = Tabs;\nconst {Text} = Typography;\nconst {Step} = Steps;\nconst {Content} = Layout;\nconst InputGroup = Input.Group;\nconst {Option} = Select;\nconst {confirm} = Modal;\n\nconst pageSize = 8;\n\nconst task_status = {\n    waited: \"等待中\",\n    running: '执行中',\n    aborted: \"失败\",\n    pending_stop: \"等待停止\",\n    successful: '成功',\n    user_stopped: \"已停止\"\n};\n\nconst task_status_color = {\n    waited: \"#FF8C00\",\n    running: '#FF8C00',\n    aborted: \"#fb3333\",\n    pending_stop: \"#777\",\n    successful: '#22cc22',\n    user_stopped: \"#999\"\n};\n\nexport default class TestExec extends BasePages {\n\n    logger = undefined;\n    state = {\n        value: undefined,\n        plans: [],\n        pageTasks: [],\n        platform: 'IOS',\n        ip: '',\n        port: '',\n        device_id: \"\",\n        appId:undefined,\n        tasks: [],\n        task: undefined,\n        task_logs: {},\n        showAppIdDialog:false,\n        appIds:[],\n        confirmLoading: false,\n    };\n\n    onChange = value => {\n        console.log(value);\n        this.setState({value});\n    };\n\n    get_plans() {\n        request.get('/get_plans', null)\n            .then((res) => {\n                const data = res.data ? res.data : [];\n                const temp = {};\n                flatListById(data, temp);\n                Object.keys(temp).map(item => {\n                    const plan = temp[item];\n                    plan.title = plan.name;\n                    plan.label = plan.name;\n                    plan.key = plan.plan_id;\n                    plan.value = plan.plan_id;\n                    if (plan.children.length === 0)\n                        plan.children = undefined\n                });\n                this.setState({plans: data})\n            })\n    }\n\n    get_task() {\n        request\n            .get('/get_all_task', null)\n            .then((res) => {\n                const data = res.data ? res.data : [];\n                let task = undefined;\n                data.map(item => {\n                    if (!this.state.task) {\n                        if (item.status === 'running') {\n                            task = item;\n                            task.selected = true\n                        }\n                    } else if (item.task_id === this.state.task.task_id) {\n                        task = item;\n                        task.selected = true\n                    }\n                });\n                this.setState({tasks: data, task});\n                if (task)\n                    this.onClickHistory(task, false);\n                this.onPagination(1)\n            }).finally(() => this.setState({loading: false}));\n    }\n\n    componentDidMount() {\n        const {ip, port, device_id} = global[this.state.platform];\n        this.setState({ip, port, device_id});\n        this.setState({loading: true});\n        this.get_plans();\n        this.get_task();\n        this.getAppIds();\n        this.scrollToBottom();\n    }\n\n    scrollToBottom = () => {\n        if (this.messagesEnd)\n            this.messagesEnd.scrollIntoView({behavior: \"smooth\"});\n    };\n\n    componentDidUpdate() {\n        this.scrollToBottom();\n    }\n\n\n    render() {\n        let {task} = this.state;\n        const status = task && task.status;\n        const report_url = task && task.report_url;\n        const page_data = task && task.page_data;\n        let has_attach = false;\n        let task_step_errors = undefined;\n        let step_key = [];\n        let step_error_key = [];\n        const task_step = task?.task_step ? task.task_step : [];\n        const task_log = task && this.state.task_logs ? this.state.task_logs[task.task_id] : [];\n        if (task_step) {\n\n            task_step_errors = task_step.filter(item => !item.successful);\n            task_step_errors.forEach(item => {\n                if (item.attach) has_attach = true\n            });\n            step_key = task_step.filter(item => item.attach).map(item => item.attach);\n            step_error_key = task_step_errors.filter(item => item.attach).map(item => item.attach);\n\n            task_step.forEach(item => {\n                const page = page_data.find(page => page.path === item.attach);\n                item.page_name = page ? `【${page.name}】` : '';\n                const is_error_page = step_error_key.find(path => path.startsWith(item.attach))\n                if (is_error_page)\n                    item.successful = false\n            });\n\n\n        }\n\n        let {ip, port, device_id,appId} = this.state;\n        if (task && task.app_info) {\n            ip = task.app_info.ip;\n            port = task.app_info.port;\n            device_id = task.app_info.device_id;\n            appId = task.app_info.appId;\n        }\n\n        return (\n            <Layout style={{padding: '2vh', height: \"90vh\", display: \"flex\", flexDirection: \"column\"}}>\n                <Content style={{background: \"#fff\", flex: 1}}>\n                    <Row type={'flex'}>\n                        <Col span={6}\n                             style={{\n                                 height: \"88vh\",\n                                 display: \"flex\",\n                                 flexDirection: \"column\",\n                                 borderRight: \"0.1px solid\",\n                                 borderColor: \"#efefef\",\n                             }}>\n\n                            <div style={{width: \"100%\", height: '6vh'}}>\n\n                                <div\n                                    style={{\n                                        width: \"100%\",\n                                        height: \"100%\",\n                                        display: \"flex\",\n                                        paddingTop: '2vh',\n                                        flexDirection: \"column\",\n                                        alignItems: 'center',\n                                        justifyContent: \"center\",\n                                        zIndex: 0\n                                    }}>\n                                    <p style={{fontSize: 15, color: \"#777\"}}>历史执行记录</p>\n                                </div>\n                            </div>\n\n                            <div style={{background: \"#efefef\", height: 1, width: \"100%\"}}/>\n                            <div className={'hide-scrollbar'} style={{height: '75vh', overflowY: 'scroll'}}>\n                                <List\n                                    size=\"small\"\n                                    itemLayout=\"vertical\"\n                                    dataSource={this.state.pageTasks}\n                                    renderItem={item => {\n                                        const status_color = task_status_color[item.status];\n                                        return <Row type=\"flex\" justify=\"start\"\n                                                    onClick={() => this.onClickHistory(item)}\n                                                    style={{\n                                                        background: item.selected ? `#ddd` : \"#fff\",\n                                                        marginRight: 1\n                                                    }}\n                                        >\n                                            <Row type=\"flex\" justify=\"start\" align={'middle'}\n                                                 style={{\n                                                     paddingLeft: 16,\n                                                     paddingRight: 16,\n                                                     paddingTop: 12,\n                                                     paddingBottom: 12,\n                                                     flex: 1\n                                                 }}>\n                                                <Icon type={item.device.platform === \"Android\" ? 'android' : \"apple\"}\n                                                      style={{\n                                                          fontSize: 20,\n                                                          color: item.status === 'user_stopped' ? task_status_color.user_stopped : \"#333\"\n                                                      }}/>\n                                                <Row style={{flex: 1, marginLeft: 8}}>\n                                                    <Col>\n                                                    <span className={'item-title'} style={{\n                                                        color: item.status === 'user_stopped' ? task_status_color.user_stopped : \"#333\",\n                                                        fontSize: 14\n                                                    }}>{item.name}</span>\n                                                    </Col>\n                                                    <Col>\n                                                        <span style={{\n                                                            color: item.status === 'user_stopped' ? task_status_color.user_stopped : \"#777\",\n                                                            fontSize: 10\n                                                        }}>{item.time}</span>\n                                                    </Col>\n                                                </Row>\n                                                <span style={{\n                                                    color: status_color,\n                                                    fontSize: 14\n                                                }}>{task_status[item.status]}</span>\n                                            </Row>\n                                            <div style={{background: \"#efefef\", height: 1, width: \"100%\"}}/>\n                                        </Row>\n                                    }}\n                                />\n                            </div>\n                            <Row type={'flex'} justify={'center'} style={{height: '4vh'}}>\n                                <Pagination\n                                    simple={true}\n                                    size=\"small\"\n                                    total={this.state.tasks ? this.state.tasks.length : 0}\n                                    pageSize={pageSize}\n                                    defaultCurrent={1}\n                                    showQuickJumper\n                                    onChange={(pageNum) => this.onPagination(pageNum)}\n\n                                />\n                            </Row>\n                        </Col>\n                        <Col span={18} style={{height: '85vh'}}>\n                            {\n                                (task === undefined || status === 'running' || status === 'waited') ?\n                                    <div style={{\n                                        display: \"flex\",\n                                        flexDirection: \"column\",\n                                        height: \"100%\",\n                                    }}>\n                                        <Row type=\"flex\" justify=\"start\"\n                                             style={{marginTop: 32, marginLeft: 32}}\n                                        >\n                                            <InputGroup compact>\n                                                <Select defaultValue=\"IOS\" style={{width: 100}}\n                                                        onChange={(platform) => {\n                                                            const {ip, port, device_id,appId} = global[platform];\n                                                            this.setState({platform, ip, port, device_id,appId});\n                                                        }}>\n                                                    <Option value=\"Android\">Android</Option>\n                                                    <Option value=\"IOS\">IOS</Option>\n                                                </Select>\n\n                                                <Input placeHolder=\"127.0.0.1\"\n                                                       value={ip}\n                                                       onChange={(e) => {\n                                                           global[this.state.platform].ip = e.target.value;\n                                                           this.setState({ip: e.target.value})\n                                                       }}\n                                                       style={{width: 120}}/>\n                                                <Input placeHolder=\"8100\"\n                                                       value={port}\n                                                       onChange={(e) => {\n                                                           global[this.state.platform].port = e.target.value;\n                                                           this.setState({port: e.target.value})\n                                                       }}\n                                                       style={{width: 80}}/>\n                                                <Input addonBefore=\"设备号\"\n                                                       value={device_id}\n                                                       onChange={(e) => {\n                                                           global[this.state.platform].device_id = e.target.value;\n                                                           this.setState({device_id: e.target.value})\n                                                       }}\n                                                       style={{marginLeft: 8, width: 200}}/>\n\n                                                <Select style={{marginLeft: 8, width: 200}}\n                                                        placeholder=\"请选择包名\"\n                                                        value={appId}\n                                                        onChange={(appId) => {\n                                                            global[this.state.platform].appId=appId;\n                                                            this.setState({appId})\n                                                        }}\n                                                        dropdownRender={menu => (\n                                                            <div>\n                                                                {menu}\n                                                                <Divider style={{margin: '4px 0'}}/>\n                                                                <div\n                                                                    style={{padding: '4px 8px', cursor: 'pointer'}}\n                                                                    onMouseDown={e => e.preventDefault()}\n                                                                    onClick={this.showAppIdDialog}\n                                                                >\n                                                                    <Icon type=\"setting\"/> 管理包名\n                                                                </div>\n                                                            </div>\n                                                        )}>\n                                                    {\n                                                        this.state.appIds.map(item=>(\n                                                            <Option value={item.name}>{item.name}</Option>\n                                                        ))\n                                                    }\n                                                </Select>\n\n                                            </InputGroup>\n\n\n                                        </Row>\n                                        <Row type=\"flex\" justify=\"start\"\n                                             style={{marginTop: 16, marginLeft: 16}}\n                                        >\n                                            <TreeSelect\n                                                style={{minWidth: 150, marginLeft: 16}}\n                                                dropdownStyle={{maxHeight: 400, overflow: 'auto'}}\n                                                treeData={this.state.plans}\n                                                placeholder=\"请选择测试计划\"\n                                                treeDefaultExpandAll\n                                                onSelect={this.onChange}\n                                            />\n                                            {\n                                                this.state.task && this.state.task.status === 'running' ? <div\n                                                    onClick={() => this.stopTest()}\n                                                    style={{\n                                                        width: 20,\n                                                        height: 20,\n                                                        marginLeft: 16,\n                                                        borderRadius: 2,\n                                                        background: \"#cc2222\",\n                                                        marginTop: 4\n                                                    }}/> : <Icon type={'caret-right'}\n                                                                 onClick={() => this.startTest()}\n                                                                 style={{\n                                                                     color: '#229922',\n                                                                     fontSize: 32,\n                                                                     marginLeft: 8\n                                                                 }}/>\n                                            }\n\n                                        </Row>\n                                        <div\n\n                                            className={'hide-scrollbar'}\n                                            style={{\n                                                marginTop: 24, marginLeft: 32,\n                                                flex: 1,\n                                                background: \"#111\",\n                                                padding: 8,\n                                                overflowY: 'scroll'\n                                            }}>\n                                            {\n                                                task_log && task_log.map(item => {\n                                                    return <div\n                                                        ref={(el) => {\n                                                            this.messagesEnd = el;\n                                                        }}\n                                                        style={{marginTop: 4, color: \"#ffff\"}}>\n                                                        {\n                                                            <Text code={true}\n                                                                  style={{\n                                                                      color: item.type === 'error' ? void 0 : \"#fff\",\n                                                                      fontSize: 14\n                                                                  }}\n                                                                  type={item.type === 'error' ? \"danger\" : undefined}>{`${item.time}：${item.log}`}</Text>\n                                                        }\n\n                                                    </div>\n                                                })\n                                            }\n                                        </div>\n                                    </div> :\n                                    <div style={{\n                                        display: \"flex\",\n                                        flexDirection: \"column\",\n                                        height: \"100%\",\n                                    }}>\n                                        <Row type={'flex'} justify={'start'} style={{\n                                            paddingTop: 24,\n                                            paddingLeft: 24,\n                                            paddingRight: 24,\n                                            paddingBottom: 16\n                                        }}>\n                                            <Button type=\"primary\" ghost icon={'left'}\n                                                    onClick={() => this.getBackControl()}>\n                                                返回控制台\n                                            </Button>\n\n\n                                            <Row type={'flex'} justify={'end'} style={{flex: 1}}>\n                                                <Button style={{marginLeft: 16}} type={'danger'}\n                                                        onClick={() => confirm({\n                                                            title: `你要删除【${task.name}】吗?`,\n                                                            content: '删除后将无法恢复，请确认',\n                                                            onOk: () => this.onDel(),\n                                                        })}>删除</Button>\n\n                                                <Button type=\"primary\" style={{marginLeft: 16}}\n                                                        onClick={() => this.onRedo()}>\n                                                    重新测试\n                                                    <Icon type=\"redo\"/>\n                                                </Button>\n\n                                                {\n                                                    has_attach && <Button type=\"primary\" style={{marginLeft: 16}}\n                                                                          onClick={() => this.onRedoError()}>\n                                                        只运行错误用例\n                                                        <Icon type=\"exclamation-circle\"/>\n                                                    </Button>\n                                                }\n\n                                                {\n                                                    report_url && <Button type=\"primary\" style={{marginLeft: 16}}\n                                                                          onClick={() => this.goToReport(report_url)}>\n                                                        测试报告\n                                                        <Icon type=\"right\"/>\n                                                    </Button>\n                                                }\n                                            </Row>\n                                        </Row>\n                                        <Tabs defaultActiveKey=\"2\" style={{height: '75vh'}}>\n                                            <TabPane tab=\"概览\" key=\"1\">\n                                                <div className={'hide-scrollbar'}\n                                                     style={{overflowY: 'scroll', padding: 24, height: '70vh'}}>\n                                                    <Timeline>\n                                                        {\n                                                            page_data && page_data.map(item => {\n                                                                let pageColor = step_key.includes(item.path) ? 'blue' : 'gray';\n                                                                let pageTitleColor = '#222';\n\n                                                                const method_item = item.method_data.map(method => {\n                                                                    let methodColor = '#222';\n                                                                    if (step_error_key.includes(method.path)) {\n                                                                        pageColor = 'red';\n                                                                        pageTitleColor = '#f5222d';\n                                                                        methodColor = '#f5222d'\n                                                                    }\n                                                                    return <span><br/>\n                                                                        <span\n                                                                            style={{color: methodColor}}>  {method.name} </span>\n                                                                        <span\n                                                                            style={{color: \"#777\"}}>{`(${method.data.map(data => (`${data.name}:${data.value}`))})`}</span>\n                                                                        </span>\n                                                                });\n\n\n                                                                return <Timeline.Item color={pageColor}>\n                                                                    <span\n                                                                        style={{color: pageTitleColor}}>{item.alias || item.name}</span>\n                                                                    <span\n                                                                        style={{color: \"#777\"}}>{`(${item.data.map(data => (`${data.name}:${data.value}`))})`}</span>\n                                                                    {method_item}\n                                                                </Timeline.Item>\n                                                            })\n                                                        }\n                                                    </Timeline>\n                                                </div>\n                                            </TabPane>\n                                            <TabPane tab=\"测试步骤\" key=\"2\">\n                                                <div className={'hide-scrollbar'}\n                                                     style={{overflowY: 'scroll', padding: 24, height: '70vh'}}>\n                                                    <Steps direction=\"vertical\" size=\"small\">\n                                                        {\n                                                            task_step?.map(item => (\n                                                                <Step title={`${item.title}${item.page_name}`}\n                                                                      subTitle={`${item.sub_title}`}\n                                                                      description={item.message}\n                                                                      status={!item.successful ? 'error' : 'finish'}/>))\n                                                        }\n                                                    </Steps>\n                                                </div>\n                                            </TabPane>\n                                            {\n                                                task_step_errors && task_step_errors.length > 0 &&\n                                                <TabPane tab=\"错误步骤\" key=\"3\">\n                                                    <div className={'hide-scrollbar'}\n                                                         style={{overflowY: 'scroll', padding: 24, height: '70vh'}}>\n                                                        <Steps direction=\"vertical\" size=\"small\">\n                                                            {\n                                                                task_step_errors?.filter(item => !item.successful).map(item => (\n                                                                    <Step title={`${item.title}${item.page_name}`}\n                                                                          subTitle={`${item.sub_title}`}\n                                                                          description={item.message}\n                                                                          status={!item.successful ? 'error' : 'finish'}/>))\n                                                            }\n                                                        </Steps>\n                                                    </div>\n                                                </TabPane>\n                                            }\n                                        </Tabs>\n                                    </div>\n                            }\n                        </Col>\n\n                    </Row>\n\n                    <Modal\n                        title=\"管理应用包名\"\n                        visible={this.state.showAppIdDialog}\n                        confirmLoading={this.state.confirmLoading}\n                        onOk={this.onSaveAppIds}\n                        onCancel={()=> this.setState({\n                            showAppIdDialog: false,\n                        })}\n                    >\n                        <ConfigAppField\n                            formRef={ref=>this.appIdFormRef = ref}\n                            dataSource={this.state.appIds}\n                        />\n                    </Modal>\n                </Content>\n            </Layout>\n        );\n    }\n\n\n    onPagination(pageNum) {\n        let pageTasks = [];\n        if (this.state.tasks)\n            pageTasks = this.state.tasks.slice((pageNum - 1) * pageSize, (pageNum - 1) * pageSize + pageSize);\n        this.setState({pageTasks});\n\n    }\n\n    onClickHistory(task, isManual = true) {\n        console.log(task);\n        const tasks = [...this.state.tasks];\n        tasks.map(item => item.selected = false);\n        task.selected = true;\n        const log = isManual ? {test_log: [], test_step: []} : {};\n        this.setState({tasks, task, ...log});\n        if (this.logger) clearInterval(this.logger);\n\n        if (task.status === 'running')\n            this.logger = setInterval(() => this.getTaskLog(task), 1000);\n        else if (isManual && task.status === 'waited')\n            setTimeout(() => this.get_task(), 500);\n        else\n            this.getTaskStep(task)\n    }\n\n    componentWillUnmount() {\n        if (this.logger) clearInterval(this.logger);\n    }\n\n    startTest() {\n        const {ip, port, device_id} = global[this.state.platform];\n        request\n            .post('/start_test', {\n                ip,\n                port,\n                device_id,\n                app_id:this.state.appId,\n                platform: this.state.platform,\n                plan_id: this.state.value,\n            })\n            .then((res) => {\n                const code = res.code;\n                if (code === 1) {\n                    this.get_task();\n                    setTimeout(() => this.get_task(), 2500);\n                }\n            });\n    }\n\n    stopTest() {\n        const {task} = this.state;\n        clearInterval(this.logger);\n        if (!task || task.status !== 'running') {\n            return\n        }\n        request\n            .post('/stop_test', {task_id: task.task_id, group_id: task.group_id})\n            .then((res) => {\n                const code = res.code;\n                if (code === 1) {\n                    this.get_task();\n                    setTimeout(() => this.get_task(), 2500);\n                }\n            });\n    }\n\n    getTaskLog(task) {\n        if (!task || task.status !== 'running') {\n            clearInterval(this.logger);\n            return\n        }\n        request\n            .post('/get_task_log', {task_id: task.task_id, group_id: task.group_id}, {errorTip: false})\n            .then((res) => {\n                const task_log = [];\n                const data = res;\n                if (data) {\n                    data.forEach(log => {\n                        task_log.push(JSON.parse(log))\n                    });\n                }\n\n                const task_logs = this.state.task_logs;\n                task_logs[task.task_id] = task_log;\n                this.setState({task_logs});\n\n                const currentTask = this.state.task;\n                if (currentTask && currentTask.task_id === task.task_id) {\n                    this.scrollToBottom();\n                    this.get_task()\n                }\n            })\n    }\n\n    getTaskStep(task) {\n        if (!task) return;\n        if (task.task_steps) return;\n        request\n            .post('/get_task_step', {task_id: task.task_id, group_id: task.group_id})\n            .then((res) => {\n                const task_step = [];\n                const data = res;\n                if (data) {\n                    data.forEach(step => {\n                        task_step.push(JSON.parse(step))\n                    });\n                }\n                const currentTask = this.state.task;\n                if (currentTask && currentTask.task_id === task.task_id) {\n                    currentTask.task_step = task_step;\n                    this.setState({task_steps: currentTask});\n                }\n            })\n    }\n\n    getAppIds() {\n        request\n            .get('/get_appIds')\n            .then((res) => {\n                const data = res.data;\n                if (data && Array.isArray(data) && data.length > 0) {\n                    this.setState({appIds: data});\n                }\n            })\n    }\n\n\n    getBackControl() {\n        const {task} = this.state;\n        const tasks = [...this.state.tasks];\n        tasks.map(item => item.selected = false);\n        task.selected = false;\n        this.setState({tasks, task: void 0, task_log: []});\n    }\n\n    onDel() {\n        const {task} = this.state;\n        if (!task) return;\n        request\n            .post('/del_task', {task_id: task.task_id, group_id: task.group_id})\n            .then((res) => {\n                const code = res.code;\n                if (code === 1) {\n                    this.get_task();\n                    setTimeout(() => this.get_task(), 2500);\n                }\n            });\n    }\n\n    onRedo() {\n        const {task} = this.state;\n        if (!task) return;\n        request\n            .post('/start_test_by_task', {task_id: task.task_id, group_id: task.group_id})\n            .then((res) => {\n                const code = res.code;\n                if (code === 1) {\n                    this.get_task();\n                    setTimeout(() => this.get_task(), 2500);\n                }\n            });\n    }\n\n    onRedoError() {\n        const {task} = this.state;\n        if (!task) return;\n        const task_step = task.task_step;\n        const selected_node = [];\n        if (task_step)\n            task_step.filter(item => !item.successful).forEach(item => {\n                if (item.attach) selected_node.push(item.attach)\n            });\n        request\n            .post('/start_error_test_by_task', {\n                task_id: task.task_id,\n                group_id: task.group_id,\n                selected_node: selected_node\n            })\n            .then((res) => {\n                const code = res.code;\n                if (code === 1) {\n                    this.get_task();\n                    setTimeout(() => this.get_task(), 2500);\n                }\n            });\n\n\n    }\n\n    goToReport(report_url) {\n        const w = window.open('about:blank');\n        w.location.href = report_url\n    }\n\n    showAppIdDialog = () => {\n        this.setState({ showAppIdDialog: true})\n    }\n\n\n    onSaveAppIds=()=> {\n        this.setState({ confirmLoading: true});\n        if(this.appIdFormRef){\n            this.appIdFormRef.validateFields((err, values) => {\n                if (!err) {\n                    console.log('values',values);\n                    const appIds=Object.keys(values.name).map(item=>({id:item,name:values.name[item]}));\n                    request.post('upload_appIds',{appIds}).then((res) => {\n                        const code = res.code;\n                        if (code === 1) {\n                            this.setState({appIds});\n                            this.setState({ showAppIdDialog: false, confirmLoading: false})\n                        }else\n                            this.setState({ confirmLoading: false})\n                    }).catch(()=>this.setState({ confirmLoading: false}));\n\n                }else{\n                    this.setState({ confirmLoading: false})\n                }\n            });\n        }\n\n    }\n\n}\n\n\n","export const guideData = [\n    {\n        id: 'quick_use',\n        title: '快速使用',\n        children: [\n            {\n                title: '第一步',\n                desc: '在 src/pages 目录下 新建一个 DemoPage 继承 TestPage',\n                imgs:[\n                    ['http://localhost:9000/static/guide_images/01.png']\n                ]\n            },\n            {\n                title: '第二步',\n                desc: '运行 server 目录下的 manager.py',\n                imgs:[\n                    ['http://localhost:9000/static/guide_images/02.png']\n                ]\n            },\n            {\n                title: '第三步',\n                desc: '新建一个版本计划,在这里可以单独为每一个页面或测试方法配置变量',\n                imgs:[\n                    ['http://localhost:9000/static/guide_images/03.png'],\n                    ['http://localhost:9000/static/guide_images/04.png'],\n                    ['http://localhost:9000/static/guide_images/05.png'],\n                ]\n            },\n            {\n                title: '第四步',\n                desc: '新建一个测试计划,并选择你要测试的界面，每一个测试计划可以为所选择的测试页面配置全局变量，注意，如果变量与页面所配置的变量相同，会覆盖其变量',\n                imgs:[\n                    ['http://localhost:9000/static/guide_images/06.png'],\n                    ['http://localhost:9000/static/guide_images/07.png'],\n                ]\n            },\n            {\n                title: '第五步',\n                desc: '选择Android，新建一个包名并选择它。执行一个测试的用例或用例组。',\n                imgs:[\n                    ['http://localhost:9000/static/guide_images/08.png'],\n                    ['http://localhost:9000/static/guide_images/09.png'],\n                    ['http://localhost:9000/static/guide_images/10.png'],\n                ]\n            },\n        ],\n\n    },\n    {\n        title: 'API',\n        desc: '目前这里只列出测试开发中会用到的API',\n        children: [\n            {\n                title: 'App',\n                desc: '有两个子类，分别为AndroidApp 和 IOSApp',\n                children: [\n                    {\n                        title: 'start_app',\n                        desc: '启动App',\n                    },\n                    {\n                        title: 'stop_app',\n                        desc: '停止App',\n                    },\n                    {\n                        title: 'start_test',\n                        desc: '开始测试，ip和port IOS默认的是 127.0.0.1:8081。Android 无默认值',\n                        params: [\n                            ['pages', '测试页面的对象可以是 class对象或者 PageData 对象，必须是继承 TestPage 的 class'],\n                            ['ip', '设备IP地址', 'None'],\n                            ['port', '设备端口', 'None'],\n                            ['device_id', '设备ID', 'None'],\n                        ]\n                    },\n                ]\n            },\n            {\n                title: 'TestPage',\n                desc: '测试页面，所有的测试脚本都必须继承这个类',\n                children: [\n                    {\n                        title: 'setUpClass',\n                        desc: '所有的测试方法运行前运行，为单元测试做前期准备,整个测试页面只执行一次',\n                    }, {\n                        title: 'tearDownClass',\n                        desc: '所有的测试方法运行结束后运行，为单元测试做后期清理工作,整个测试页面只执行一次',\n                    },\n                    {\n                        title: 'setUp',\n                        desc: '每个测试方法运行前运行，测试前的初始化工作。一条用例执行一次，若N次用例就执行N次，根据用例的数量来定。默认是执行 stop_app 和 start_app，如果你不想这样处理，可在子类中覆盖此方法',\n                    }, {\n                        title: 'tearDown',\n                        desc: '每个测试方法运行结束后运行，测试后的清理工作。一条用例执行一次，若N次用例就执行N次。 默认是执行 stop_app，如果你不想这样处理，可在子类中覆盖此方法',\n                    },\n                    {\n                        title: 'is_ios_device',\n                        desc: '返回当前运行的平台是 True 为IOS，False 为Android',\n                    },\n                    {\n                        title: 'scroll_down',\n                        desc: '页面往下滚动一段距离',\n                    },\n                    {\n                        title: 'wait_stable',\n                        desc: '等待稳定状态，实际上只是sleep了0.8秒',\n                    },\n                    {\n                        title: 'set_ui',\n                        desc: '如果你的UI对象不是在__init__中初始化的，比如是方法的本地变量，那么在本地变量初始化后之后，调用此方法，进行设置。self.set_ui(UI)',\n                    },\n                    {\n                        title: 'freeze',\n                        support_framework: {poco: true},\n                        desc: '冻结页面，也就是dump一份页面的数据，使用它来查找效率会快很多，缺点是在时效性只有在调用它的那一刻，之后的手机上的UI更新不会同步到这里',\n                        params: []\n                    },\n                    {\n                        title: 'wait_for_any',\n                        support_framework: {poco: true},\n                        desc: '等待任意一个元素出现，目前只支持poco',\n                        params: [\n                            ['objects', '需要等待的元素的集合，必填', '无'],\n                            ['timeout', '等待时长', '120秒']\n                        ]\n                    },\n                    {\n                        title: 'wait_for_all',\n                        support_framework: {poco: true},\n                        desc: '等待所有的元素都出现，目前只支持poco',\n                        params: [\n                            ['objects', '需要等待的元素的集合，必填', '无'],\n                            ['timeout', '等待时长', '120秒']\n                        ]\n                    },\n                    {\n                        title: 'assert_for_any',\n                        support_framework: {poco: true},\n                        desc: '断言任意一个元素出现，组合操作，wait_for_any + assert_exists',\n                        params: [\n                            ['objects', '需要等待的元素的集合，必填', '无'],\n                            ['msg', '断言的描述', '无'],\n                            ['timeout', '等待时长', '120秒']\n                        ]\n                    },\n                    {\n                        title: 'scroll',\n                        desc: '滑动，使用poco实现',\n                        support_framework: {poco: true},\n                        params: [\n                            ['direction', \"滑动方向 'up', 'down', 'left', 'right'，必填\", '无'],\n                            ['focus', '滑动的焦点[\"anchor\",\"center\",(x:0 - 1, y:0 - 1)]', 'anchor'],\n                            ['duration', '滑动时长', '0.5秒'],\n                        ]\n                    },\n                    {\n                        title: 'pinch',\n                        desc: '缩放，使用poco实现',\n                        support_framework: {poco: true},\n                        params: [\n                            ['direction', \"滑动方向 'in', 'out'\", 'in'],\n                            ['percent', '滑动的距离，宽或高的百分比 0 - 0.1', '0.3'],\n                            ['duration', '滑动时长，单位秒', '1秒'],\n                            ['dead_zone', '缩放的半径,请不要超过 1', '0.1'],\n                        ]\n                    },\n                    {\n                        title: 'snapshot',\n                        desc: '截图，使用poco实现',\n                        params: [\n                            ['fileName', '图片名字，默认是截图.jpg', 'None'],\n                            ['msg', '图片的描述，以便于在报告上查看', '\"\"'],\n                        ]\n                    },\n                    {\n                        title: 'assert_equal',\n                        desc: '断言两者是相等',\n                        params: [\n                            ['first', '必填'],\n                            ['second', '必填'],\n                            ['msg', '断言描述', '\"\"'],\n                        ]\n                    },\n                    {\n                        title: 'assert_not_equal',\n                        desc: '断言两者不相等',\n                        params: [\n                            ['first', '必填'],\n                            ['second', '必填'],\n                            ['msg', '断言描述', '\"\"'],\n                        ]\n                    },\n                    {\n                        title: 'get_screen_size',\n                        desc: '获取屏幕大小',\n                    },\n\n                ]\n            },\n            {\n                title: 'UI',\n                desc: '节点对象',\n                children: [\n                    {\n                        title: 'wait_for_appearance',\n                        desc: '等待元素出现，默认等待超时120秒，Airtest 找不到对象会抛出 TargetNotFoundError，Poco 则是抛出 PocoTargetTimeout',\n                        params: [['timeout', '等待时长', '120秒']]\n                    },\n                    {\n                        title: 'wait_for_disappearance',\n                        desc: '等待元素消失，默认等待超时120秒,规定时间内 对象仍然存在，则会抛出 PocoTargetTimeout(\\'disappearance\\', self)',\n                        params: [['timeout', '等待时长', '120秒']]\n                    },\n                    {\n                        title: 'click',\n                        desc: '执行该元素的点击事件， 如果点击时 元素不存在，会尝试第二次，时间间隔2秒',\n                        params: []\n                    },\n                    {\n                        title: 'exists',\n                        desc: '判断元素是否存在',\n                        params: [\n                            ['is_retry', '报错后是否尝试,默认会重试', 'True'],\n                            ['sleeps', '重试间隔，单位秒', '2秒'],\n                            ['max_attempts', '重试次数', '2次'],\n                        ]\n                    },\n                    {\n                        title: 'wait_click',\n                        desc: '组合操作，wait_for_appearance + click',\n                        params: [['timeout', '等待时长', '120秒']]\n                    },\n                    {\n                        title: 'wait_exists',\n                        desc: '组合操作，wait_for_appearance + exists',\n                        params: [['timeout', '等待时长', '120秒']]\n                    },\n                    {\n                        title: 'swipe',\n                        desc: '滑动，使用poco实现',\n                        support_framework: {poco: true},\n                        params: [\n                            ['direction', \"滑动方向 'up', 'down', 'left', 'right'，必填\", '无'],\n                            ['focus', '滑动的焦点[\"anchor\",\"center\",(x:0 - 1, y:0 - 1)]', 'anchor'],\n                            ['duration', '滑动时长', '0.5秒'],\n                        ]\n                    },\n                    {\n                        title: 'airtest_swipe',\n                        desc: '滑动，使用Airtest实现',\n                        support_framework: {airtest: true},\n                        params: [\n                            ['v2', \"滑动目的对象:Template/pos' \", 'None'],\n                            ['vector', '滑动目的坐标(x:-1 - 1, y:-1 - 1)', 'None'],\n                            ['duration', '滑动时长', '0.5秒'],\n                        ]\n                    },\n                    {\n                        title: 'sendKeys',\n                        desc: '发送文字到文本输入框,这是一个组合操作',\n                        params: [\n                            ['keys', '需要发送的数据'],\n                            ['enter', '回车', 'True'],\n                        ]\n                    },\n                    {\n                        title: 'clear',\n                        desc: '清空输入框，但只支持Android',\n                        support_framework: {poco: true},\n                        support_platform: {android: true},\n                        params: []\n                    },\n                    {\n                        title: 'find',\n                        desc: '查找元素是否存在，如果找找不到会往所设的方向，滑动一段距离继续查找，直至被找到或超时。适用于滚动的视图或者列表',\n                        params: [\n                            ['direction', '滑动方向，默认为竖直方向', \"'vertical'\"],\n                            ['percent', '滑动的距离，宽或高的百分比 0 - 0.1', '0.3'],\n                            ['duration', '滑动时长，单位秒', '1秒'],\n                            ['timeout', '等待时长', '120秒']\n                        ]\n                    },\n                    {\n                        title: 'assert_not_exists',\n                        desc: '断言元素不存在',\n                        params: [\n                            ['msg', '断言描述', '\"\"'],\n                        ]\n                    },\n                    {\n                        title: 'assert_exists',\n                        desc: '断言元素存在',\n                        params: [\n                            ['msg', '断言描述', '\"\"'],\n                        ]\n                    },\n                    {\n                        title: 'child',\n                        desc: '从元素中获取指定描述的子元素',\n                        params: [\n                            ['name', '元素的 name', 'None'],\n                            ['attrs', '元素的 属性'],\n                        ]\n                    },\n                    {\n                        title: 'children',\n                        desc: '从元素中获取子元素集合',\n                        params: []\n                    },\n                    {\n                        title: 'offspring',\n                        desc: '从元素中获取指定描述的后代',\n                        params: [\n                            ['name', '元素的 name', 'None'],\n                            ['attrs', '元素的 属性'],\n                        ]\n                    },\n                    {\n                        title: 'sibling',\n                        desc: '从元素中获取指定描述的兄弟元素',\n                        params: [\n                            ['name', '元素的 name', 'None'],\n                            ['attrs', '元素的 属性'],\n                        ]\n                    },\n                    {\n                        title: 'parent',\n                        desc: '获取该元素的父元素',\n                        params: []\n                    },\n                    {\n                        title: 'freeze',\n                        support_framework: {poco: true},\n                        desc: '冻结页面并从该页面查找改元素，也就是dump一份页面的数据，使用它来查找效率会快很多，缺点是在时效性只有在调用它的那一刻，之后的手机上的UI更新不会同步到这里',\n                        params: []\n                    },\n                ]\n            }\n        ]\n    },\n\n];\n\nexport function flat_data(data, list) {\n    data.forEach(item => {\n        list.push(item);\n        if (item.children) flat_data(item.children, list)\n    })\n}\n\n","import * as React from \"react\";\nimport {Anchor, Checkbox, Layout, Table,} from \"antd\";\nimport Typography from \"antd/es/typography\";\nimport {flat_data, guideData} from \"./guideData\";\n\nconst {Title, Paragraph} = Typography;\nconst {Link} = Anchor;\nconst {Content} = Layout;\n\nconst flatData = [];\nflat_data(guideData, flatData);\n\nexport class Guide extends React.Component {\n\n    loop = (data) => {\n        if (!data) return;\n        return data.map((item => {\n            return <Link href={`#${item.id || item.title}`} title={item.title} children={this.loop(item.children)}/>\n        }))\n    };\n\n    render() {\n\n        return (\n\n            <Layout id='content' style={{padding: '2vh', display: \"flex\", flexDirection: \"column\"}}>\n                <Content style={{background: \"#fff\", flex: 1}}>\n                    <div\n                        style={{display: \"flex\", flexDirection: \"row\"}}\n                    >\n                        <div\n                            style={{\n                                display: \"flex\",\n                                padding: 16,\n                                flex: 5,\n                                flexDirection: \"column\",\n                                borderRight: \"0.1px solid\",\n                                borderColor: \"#efefef\",\n                            }}>\n\n                            <Anchor getContainer={() => document.getElementById('rootLayout')}\n                            >\n                                {this.loop(guideData)}\n                            </Anchor>\n                        </div>\n                        <div style={{\n                            display: \"flex\",\n                            padding: 16,\n                            flex: 19,\n                            flexDirection: \"column\"\n                        }}>\n                            {flatData.map(item => <Doc data={item}/>)}\n                        </div>\n                    </div>\n                </Content>\n            </Layout>\n        );\n    }\n\n}\n\nconst paramsColumns = [\n    {\n        title: '名称',\n        dataIndex: 'name',\n        key: 'name'\n    },\n    {\n        title: '描述',\n        dataIndex: 'desc',\n        key: 'desc'\n    },\n    {\n        title: '默认值',\n        dataIndex: 'value',\n        key: 'value'\n    },\n];\n\nfunction Doc({data}) {\n\n    let params = undefined;\n    if (data.params && data.params.length > 0) {\n        params = [];\n        data.params.forEach(item => {\n            params.push({name: item[0], desc: item[1] ?? '无', value: item[2] ?? '无'})\n        })\n    }\n    let support_ios = true, support_android = true;\n    if (data.support_platform) {\n        support_ios = data.support_platform.ios;\n        support_android = data.support_platform.android\n    }\n\n    let support_airtest = true, support_poco = true;\n    if (data.support_framework) {\n        support_airtest = data.support_framework.airtest;\n        support_poco = data.support_framework.poco;\n    }\n\n    return (<a name={data.id || data.title} style={{margin: 16}}>\n        <Typography>\n            <Title level={4}>{data.title}</Title>\n            {data.desc && <Paragraph>{data.desc}</Paragraph>}\n\n            {\n                data.params && <React.Fragment>\n                    <span>平台支持:</span>\n                    <br/>\n                    <Checkbox defaultChecked={support_ios} disabled>支持IOS</Checkbox>\n                    <br/>\n                    <Checkbox defaultChecked={support_android} disabled>支持Android</Checkbox>\n                    <br/>\n                    <br/>\n                </React.Fragment>\n            }\n            {\n                data.params && <React.Fragment>\n                    <span>测试框架支持:</span>\n                    <br/>\n                    <Checkbox defaultChecked={support_poco} disabled>支持POCO</Checkbox>\n                    <br/>\n                    <Checkbox defaultChecked={support_airtest} disabled>支持Airtest</Checkbox>\n                </React.Fragment>\n            }\n        </Typography>\n\n        {data.imgs && data.imgs.map(item => (\n            <div style={{marginTop: 16}}>\n                <p>{item[1]}</p>\n                <img src={item[0]} alt=\"\" style={{width: '80%'}}/>\n            </div>\n        ))}\n        {params &&\n        <Table style={{marginTop: 16}} columns={paramsColumns} dataSource={params} size={'small'} title={() => '参数'}\n               pagination={false}/>}\n    </a>);\n}\n","import {Component} from \"react\";\nimport {BrowserRouter as Router, Redirect, Route, Switch} from \"react-router-dom\";\nimport React from \"react\";\nimport {Application} from \"./application\";\n// import {createBrowserHistory} from \"history\";\nimport TestPages from \"./pages/test-pages\";\nimport TestPlans from \"./pages/test-plans\";\nimport TestExec from \"./pages/test-exec\";\nimport {Guide} from \"./pages/guide\";\n\n// const history = createBrowserHistory();\n\nexport class App extends Component {\n\n    render() {\n        return (\n            <div style={{display: 'flex', flexDirection: 'column', position: 'relative', height: '100vh'}}>\n                <Router>\n                    <Switch>\n                        <Route path={'/'} render={props => (<Application {...props}>\n                            <Switch>\n                                <Route exact path={'/test_pages'} component={TestPages}/>\n                                <Route exact path={'/test_plans'} component={TestPlans}/>\n                                <Route exact path={'/test_exec'} component={TestExec}/>\n                                <Route exact path={'/guide'} component={Guide}/>\n                                <Redirect path={'/'} to={'/test_pages'}/>\n                            </Switch>\n                        </Application>)}/>\n                    </Switch>\n                </Router>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport {App} from \"./App\";\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}